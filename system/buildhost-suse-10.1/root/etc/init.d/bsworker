#! /bin/sh
# Copyright (c) 1995-1998 SuSE GmbH Nuernberg, Germany.
#
# Author: adrian@suse.de
#
# /etc/init.d/bsworker
#   and its symbolic  link
# /usr/sbin/rcbsworker
#
### BEGIN INIT INFO
# Provides:          bsworker
# Required-Start:    $time $syslog $bsmd
# Required-Stop:
# Default-Start:     3 5
# Default-Stop:      0 1 2 4 6
# Description:       openSUSE build service worker
### END INIT INFO

. /etc/rc.status

# Determine the base and follow a runlevel link name.
base=${0##*/}
link=${base#*[SK][0-9][0-9]}
hostip=storage
screenrc=/etc/screenrc.worker
bsopt=""

if [ -f /etc/buildhost.config ];then
	. /etc/buildhost.config
	bsopt=--xen
fi

rc_reset
case "$1" in
    start)
		# create /etc/screenrc.worker
		echo "zombie on"       > $screenrc
		echo "caption always" >> $screenrc

		# sync latest code state from server
		rsync -avHL $hostip::opensuse-bsworker /root/bs
	
		cd /root/bs
		rpm -Uvh build.rpm
		NUM=`grep ^processor /proc/cpuinfo  | wc -l`
		I=0
		ROOT="/abuild"
		echo "Run $NUM bsworker using $ROOT"
		while test "$NUM" -gt "$I"; do
			I=$(( $I + 1 ))
			title="$HOSTNAME/$I"
			# prepare bsworker startup in screen...
			echo "screen -t $title ./bs_worker $bsopt --root $ROOT/root_$I" --statedir /var/run/bsworker_$I --id "$HOSTNAME/$I" \
				>> $screenrc
			# prepare xen build setup...
			# requires the file /etc/buildhost.config which contains
			# the following variables:
			# ---
			# XEN_ROOT=[n]
			# XEN_SWAP=[n]
			# XEN_MEMX=[n]
			# ---
			if [ ! -d $ROOT/root_$I ];then
				mkdir -p $ROOT/root_$I
			fi
			if [ ! -z $bsopt ];then
				dd if=/dev/zero of=$ROOT/root_$I/root bs=1M count=$XEN_ROOT
				dd if=/dev/zero of=$ROOT/root_$I/swap bs=1M count=$XEN_SWAP
				echo $XEN_MEMX > $ROOT/root_$I/memory
			fi
			mkdir -p /var/run/bsworker_$I
		done
		screen -m -d -c $screenrc
	;;
	stop)
		echo -n "NOT IMPLEMENTED "
	rc_status -v
	;;
	restart)
		echo -n "NOT IMPLEMENTED "
		## If first returns OK call the second, if first or
		## second command fails, set echo return value.
		#$0 stop &&  $0 start
		rc_status
	;;
	try-restart)
		$0 status
		if test $? = 0; then
			$0 restart
		else
			rc_reset        # Not running is not a failure.
		fi
		# Remember status and be quiet
		rc_status
	;;
	reload)
	;;
	status)
		echo  "NOT IMPLEMENTED"
		#rc_status -v
	;;
	*)
		echo "Usage: $0 {start|stop|status|try-restart|restart|reload}"
		exit 1
	;;
esac
rc_exit
