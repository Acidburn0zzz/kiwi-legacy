#!/bin/bash
#================
# FILE          : linuxrc
#----------------
# PROJECT       : OpenSuSE KIWI Image System
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH. All rights reserved
#               :
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This file is changed to become the real
#               : linuxrc script which is used to prepare the
#               : operating system for the main image
#               :
#               :
# STATUS        : BETA
#----------------
#======================================
# Exports (General)...
#--------------------------------------
export PATH="/sbin:/bin:/usr/sbin:/usr/bin"
export IFS_ORIG=$IFS
export DEBUG=0

#======================================
# Functions...
#--------------------------------------
. /include

#======================================
# Functions...
#--------------------------------------
USBStickDevice () {
	for device in /sys/bus/usb/drivers/usb-storage/*;do
		if [ -L $device ];then
			descriptions=$device/host*/target*/*/block*
			for description in $descriptions;do
				if [ ! -d $description ];then
					continue
				fi
				isremovable=$description/removable
				storageID=`echo $description | cut -f1 -d: | xargs basename`
				devicebID=`basename $description | cut -f2 -d:`
				serial="/sys/bus/usb/devices/$storageID/serial"
				device="/dev/$devicebID"
				if [ ! -b $device ];then
					continue;
				fi
				if [ ! -f $isremovable ];then
					continue;
				fi
				if [ ! -f $serial ];then
					serial="USB Stick (unknown type)"
				else
					serial=`cat $serial`
				fi
				removable=`cat $isremovable`
				if [ $removable -eq 1 ];then
					stickDevice="$device"2
					stickSerial=$serial
				fi
			done
		fi
	done
}
stickMountSystem () {
	mount $stickDevice /mnt &>/dev/null
}
stickUmountSystem () {
	umount /mnt
}
#======================================
# Beautify Startup
#--------------------------------------
clear
echo "Loading KIWI USB-Stick Boot-System..."
echo "-------------------------------------"

#======================================
# 1) Mounting local file systems
#--------------------------------------
mount -t proc  proc    /proc
mount -t sysfs sysfs   /sys
mount -t devpts devpts /dev/pts
closeKernelConsole

#======================================
# 2) Prepare module load support 
#--------------------------------------
touch /etc/modules.conf
touch /lib/modules/*/modules.dep

#======================================
# 3) Including required kernel modules
#--------------------------------------
Echo "Including required kernel modules..."
probeDevices

#======================================
# 4) Load USB storage modules
#--------------------------------------
for module in usb_storage sg sd_mod;do
	modprobe $module
done
sleep 5

#======================================
# 5) Search USB stick device
#--------------------------------------
USBStickDevice

#======================================
# 6) Mount USB stick (boot)
#--------------------------------------
stickMountSystem

#======================================
# 6) Get filesystem type
#--------------------------------------
readFileSystem /mnt/image/config.xml
stickUmountSystem

#======================================
# 7) Resize filesystem to full space
#--------------------------------------
Echo "Resize filesystem to full partition space..."
if test "$FSTYPE" = "reiserfs";then
	resize_reiserfs $stickDevice
fi
if test "$FSTYPE" = "ext2";then
	e2fsck -y -f $stickDevice
	resize2fs -F -p $stickDevice
fi
if test "$FSTYPE" = "ext3";then
	e2fsck -y -f $stickDevice
	resize2fs -F -p $stickDevice
	tune2fs -j $stickDevice
fi

#======================================
# 8) Mount USB stick (system)
#--------------------------------------
stickMountSystem

#======================================
# 9) setup real root device
#--------------------------------------
echo 256 > /proc/sys/kernel/real-root-dev

#======================================
# 10) umount system filesystems
#--------------------------------------
umount /dev/pts
umount /sys
umount /proc

#======================================
# 11) copy initrd files to image
#--------------------------------------
cp /preinit /mnt
cp /include /mnt

#======================================
# 12) Activate new root
#--------------------------------------
Echo "Activating Image: [$stickSerial on -> $stickDevice]"
cd /mnt && exec < dev/console >dev/console 2>&1
Echo "Calling preinit phase..."
/mnt/sbin/pivot_root . mnt >/dev/null 2>&1
if test $? != 0;then
	PIVOT=false
	mount --move . / && chroot . ./preinit
	chroot . rm ./preinit
else
	PIVOT=true
	./preinit
	rm ./preinit
fi
#======================================
# 13) Unmount initrd / system init
#--------------------------------------
echo " "
echo "Booting into USB-Stick System..."
echo "--------------------------------"
reopenKernelConsole
mount -n -o remount,rw / &>/dev/null
if [ $PIVOT = "true" ];then
	exec umount -n -l /mnt
else
	exec chroot . /sbin/init
fi
