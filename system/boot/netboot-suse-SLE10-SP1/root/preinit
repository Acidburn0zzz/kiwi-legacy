#!/bin/bash
#================
# FILE          : preinit
#----------------
# PROJECT       : OpenSuSE KIWI Image System
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH. All rights reserved
#               :
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This file is called after the image root
#               : has changed by the linuxrc script
#               :
# STATUS        : BETA
#----------------
#
#======================================
# Functions...
#--------------------------------------
Echo () {
	if test "$1" = "-n";then
		echo $1 "-----> $2"
	elif test "$1" = "-b";then
		echo "       $2"
	else
		echo "-----> $1"
	fi
}
systemException () {
	Echo "$1"
	case "$2" in
	"reboot")
		Echo "rebootException: reboot in 60 sec..."; sleep 60
		/sbin/restart >/dev/null 2>&1
	;;
	"wait")
		Echo "waitException: waiting for ever..."
		while true;do sleep 100;done
	;;
	"shell")
		Echo "shellException: providing shell..."
		/bin/sh
	;;
	*)
		Echo "unknownException..."
	;;
	esac
}
getSystemIntegrity () {
	if [ -z "$SYSTEM_INTEGRITY" ];then
		echo "clean"
	else  
		echo $SYSTEM_INTEGRITY | cut -f$1 -d:
	fi
}
getSystemMD5Status() {
	echo $SYSTEM_MD5STATUS | cut -f$1 -d:
}

#======================================
# 14) create initrd on diskful
#--------------------------------------
if test ! -z $DISK;then
if test $systemIntegrity = "clean";then
	if test -L /boot/boot;then
		mount -t proc proc /proc
		mount -t sysfs sysfs /sys
		mkinitrd 
		umount /sys
		umount /proc
	else
		Echo "Image doesn't provide kernel system map"
		Echo "Can't create initrd"
	fi
fi
fi

#======================================
# 15) Install boot loader on diskful
#--------------------------------------
if test ! -z $DISK;then
if test $systemIntegrity = "clean";then
	if test -f "/usr/sbin/grub";then
		Echo "Installing boot loader..."
		/usr/sbin/grub --batch --no-floppy < /etc/grub.conf >/dev/null 2>&1
		echo "alias eth0 $networkModule" >> /etc/modules.conf
	else
		Echo "Image doesn't provide grub support"
		Echo "Can't install boot loader"
	fi
fi
fi

#======================================
# 16) Reset systemIntegrity
#--------------------------------------
if test ! -z $DISK;then
if test ! -z $RELOAD_CONFIG;then
	systemIntegrity=$systemIntegrity_save
fi
fi

#======================================
# 17) check for valid mount points 
#--------------------------------------
if test ! -z $DISK;then
	IFS=":" ; for i in $PART_MOUNT;do
	if test ! -z "$i";then
	if test ! -f "$i";then
		mkdir -p $i
	fi
	fi
	done
fi

#======================================
# 18) Update /etc/ImageVersion files
#--------------------------------------
if test ! -z $DISK;then
	count=0
	IFS="," ; for i in $IMAGE;do
		count=$(($count + 1))
		field=0
		IFS=";" ; for n in $i;do
		case $field in
			0) field=1 ;;
			1) imageName=$n   ; field=2 ;;
			2) imageVersion=$n; field=3 ;;
			3) imageServer=$n ; field=4 ;;
			4) imageBlkSize=$n
		esac
		done
		atversion="$imageName-$imageVersion"
		versionFile="/etc/ImageVersion-$atversion"
		md5sum=`getSystemMD5Status $count`
		if test `getSystemIntegrity $count` = "clean";then
			echo "$atversion $md5sum" > $versionFile
		fi
	done
fi
