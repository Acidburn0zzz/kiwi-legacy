#!/bin/bash
#================
# FILE          : linuxrc
#----------------
# PROJECT       : OpenSuSE KIWI Image System
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH. All rights reserved
#               :
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This file includes functions for the OEM
#               : installation mode. Installation means a dump of
#               : the virtual disk file onto a preselected disk
#               :
#               :
# STATUS        : BETA
#----------------
#
#======================================
# OEMInstall
#--------------------------------------
function OEMInstall {
	# /.../
	# Installation mode: find a usable disk to install the image
	# on. The install image is a virtual disk. The system will be
	# rebooted at the end of this function
	# ----
	#======================================
	# Check for install mode indicator file
	#--------------------------------------
	if [ ! -f $VMX_SYSTEM ];then
		return
	fi
	#======================================
	# Search boot device...
	#--------------------------------------
	Echo "Searching for boot device..."
	imageDiskDevice=`searchBIOSBootDevice`

	#======================================
	# Search CD/DVD/USB stick and mount it
	#--------------------------------------
	USBStickDevice
	if [ $stickFound = 0 ];then
		Echo "Search for USB stick failed, checking CD/DVD drive"
		CDMount
		export OEMInstallType=CD
	else
		Echo "Found Stick: $stickRoot -> $stickSerial"
		mkdir -p /cdrom && mount $stickRoot"2" /cdrom
		export OEMInstallType=USB
	fi
	#======================================
	# Search and ask for the install device
	#--------------------------------------
	IFS=$IFS_ORIG
	Echo "Searching harddrive for $OEMInstallType installation"
	hwinfo=/usr/sbin/hwinfo
	if [ "$OEMInstallType" = "USB" ];then
		deviceDisks=`$hwinfo --disk |\
			grep "Device File:" | cut -f2 -d: |\
			cut -f1 -d"(" | sed -e s"@$imageDiskDevice@@"`
	else
		deviceDisks=`$hwinfo --disk |\
			grep "Device File:" | cut -f2 -d: |\
			cut -f1 -d"("`
	fi
	export deviceDisks=`echo $deviceDisks`
	if [ -z $deviceDisks ];then
		systemException \
			"No device(s) for installation found... abort" \
		"reboot"
	fi
	Echo "Found following disk device(s)"
	count=0
	for i in $deviceDisks;do
		Echo -b "Disk $count -> $i"
		deviceArray[$count]=$i
		count=`expr $count + 1`
	done
	while true;do
		Echo -n "Enter device name to select disk for installation: "
		read deviceInput
		count=0
		for instDisk in $deviceDisks;do
			if [ ${deviceArray[$count]} = $deviceInput ];then
				break 2
			fi
			count=`expr $count + 1`
		done
		Echo "Given device is not in the list !"
	done
	Echo "Entering installation mode for disk: $instDisk"
	#======================================
	# Import vmx configuration file
	#--------------------------------------
	importFile < $VMX_SYSTEM
	#======================================
	# Install disk system
	#--------------------------------------
	# install virtual disk image from the CD/DVD onto the
	# real disk. All data on the disk will be lost
	# ----
	imageZipped="uncompressed"
	imageDevice=$instDisk
	field=0
	#======================================
	# Evaluate OEM install file
	#--------------------------------------
	IFS=";" ; for n in $IMAGE;do
	case $field in
		0) field=1 ;; 
		1) imageName=$n   ; field=2 ;;
		2) imageVersion=$n;
	esac
	done
	imageName="/cdrom/$imageName"
	echo $imageName | grep -qE ".gz$"
	if [ $? = 0 ];then
		imageZipped="compressed"
	fi
	IFS=" "
	#======================================
	# Get available disk space
	#--------------------------------------
	haveKByte=`partitionSize $imageDevice`
	#======================================
	# Get required disk space
	#--------------------------------------
	needBytes=`du --bytes $imageName | cut -f1`
	needKByte=`expr $needBytes / 1024`
	if test "$imageZipped" = "compressed"; then
		Echo "Compressed image found, creating FIFO pipe"
		test ! -p /dev/compressed_image && mkfifo /dev/compressed_image
		cat /dev/compressed_image | gzip -d > $imageDevice 2>/dev/null &
		imageDevice_orig=$imageDevice
		imageName_orig=$imageName
		imageDevice="/dev/compressed_image"
		imageName="$imageName.gz"
		needBytes=`gzip -l $imageName \|
			tail -n1 | sed -e "s@ \+@:@g" | cut -f3 -d:`
		needKByte=`expr $needBytes / 1024`
	fi
	#======================================
	# Check MBR ID's...
	#--------------------------------------
	mbrM=`dd if=$instDisk  bs=1 count=4 skip=$((0x1b8))|hexdump -n4 -e '"0x%x"'`
	mbrI=`dd if=$imageName bs=1 count=4 skip=$((0x1b8))|hexdump -n4 -e '"0x%x"'`
	if [ $mbrM = $mbrI ];then
		systemException \
			"Base system already installed" \
		"reboot"
	fi	
	#======================================
	# Check disk space...
	#--------------------------------------
	haveMByte=`expr $haveKByte / 1024`
	needMByte=`expr $needKByte / 1024`
	Echo "Have size: $imageDevice -> $haveMByte MB"
	Echo "Need size: $imageName -> $needMByte MB [ uncompressed ]"
	if [ $needMByte -gt $haveMByte ];then
		systemException \
			"Not enough space available for this image" \
		"reboot"
	fi
	#======================================
	# Dump image on disk
	#--------------------------------------
	Echo "Loading $imageName [$imageDevice]..."
	if ! dd bs=32k if=$imageName of=$imageDevice >/dev/null 2>&1; then
		systemException \
			"Failed to install image: $imageName -> $imageDevice" \
		"reboot"
	fi
	if test "$imageZipped" = "compressed"; then
		imageDevice=$imageDevice_orig
		imageName=$imageName_orig
		rm -f /dev/compressed_image
	fi
	#======================================
	# Umount CD/DVD USB
	#--------------------------------------
	umount /cdrom
	#======================================
	# Reread partition table
	#--------------------------------------
	blockdev --rereadpt $imageDevice
	deviceTest=$imageDevice"1"
	if ! waitForStorageDevice $deviceTest;then
		systemException \
			"Partition $deviceTest doesn't appear... fatal !" \
		"reboot"
	fi
	#======================================
	# Reboot system
	#--------------------------------------
	if [ "$OEMInstallType" = "CD" ];then
		Echo "NOTE: Please remove the installation CD before reboot !"
		CDEject
	else
		Echo "NOTE: Please unplug the USB stick before reboot !"
	fi
	systemException \
		"System installation has finished" \
	"reboot"
}
