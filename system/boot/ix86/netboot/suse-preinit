#!/bin/bash
#================
# FILE          : preinit
#----------------
# PROJECT       : OpenSuSE KIWI Image System
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH. All rights reserved
#               :
# AUTHOR        : Marcus Schaefer <ms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This file is called after the image root
#               : has changed by the linuxrc script
#               :
# STATUS        : BETA
#----------------
#======================================
# Functions
#--------------------------------------
. /include

#======================================
# 1) start error log
#--------------------------------------
errorLogStart
Echo "Calling pre-init stage in system image"

#======================================
# 2) check for LOCAL_BOOT
#--------------------------------------
if [ $LOCAL_BOOT = "yes" ];then
	exit 0
fi

#======================================
# 3) start udev
#--------------------------------------
mountSystemFilesystems
udevSystemStart

#======================================
# 4) update mount table
#--------------------------------------
updateMTAB

#======================================
# 5) create framebuffer devices
#--------------------------------------
createFramebufferDevices

#======================================
# 6) create initrd on diskful
#--------------------------------------
if [ ! -z "$imageDiskDevice" ] && [ "$systemIntegrity" = "clean" ]; then
	if [ -z "$UNIONFS_CONFIG" ] && [ -z "$COMBINED_IMAGE" ]; then
		#======================================
		# use distro initrd via mkinitrd
		#--------------------------------------
		setupSUSEInitrd
	else
		#======================================
		# use kiwi initrd downloaded before
		#--------------------------------------
		pushd /boot &>/dev/null
		IFS="," ; for i in $KERNEL_LIST;do
			if test -z "$i";then
				continue
			fi
			kernel=`echo $i | cut -f1 -d:`
			initrd=`echo $i | cut -f2 -d:`
			if [ ! -f initrd.kiwi ] && [ ! -f linux.kiwi ];then
				Echo "WARNING: can't find kiwi initrd/linux !"
				Echo -b "local boot will not work, maybe you forgot"
				Echo -b "to add KIWI_INITRD and KIWI_KERNEL in config.<MAC> ?"
				break
			fi
			rm -f $initrd && ln -s initrd.kiwi $initrd
			rm -f $kernel && ln -s linux.kiwi  $kernel
			bootLoaderOK=1
			break
		done
		IFS=$IFS_ORIG
		popd >/dev/null
	fi
fi

#======================================
# 7) Install boot loader on diskful
#--------------------------------------
if [ "$bootLoaderOK" = 1 ];then
	installBootLoader
fi

#======================================
# 8) create /etc/ImagePackages
#--------------------------------------
if [ "$systemIntegrity" = "clean" ];then
	if [ -x /bin/rpm ];then
		Echo "Creating initial image package info file"
		rpm -qa --last > /etc/ImagePackages
	fi
fi

#======================================
# 9) check for valid mount points
#--------------------------------------
if [ ! -z "$imageDiskDevice" ];then
	IFS=":" ; for i in $PART_MOUNT;do
	if [ ! -z "$i" ] && [ ! -e "$i" ] && [ ! "$i" = "x" ];then
		mkdir -p $i
	fi
	done
fi

#======================================
# 10) Update /etc/ImageVersion files
#--------------------------------------
if [ ! -z "$imageDiskDevice" ];then
	count=0
	IFS="," ; for i in $IMAGE;do
		count=$(($count + 1))
		field=0
		IFS=";" ; for n in $i;do
		case $field in
			0) field=1 ;;
			1) imageName=$n   ; field=2 ;;
			2) imageVersion=$n; field=3
		esac
		done
		atversion="$imageName-$imageVersion"
		versionFile="/etc/ImageVersion-$atversion"
		md5sum=`getSystemMD5Status $count`
		if test `getSystemIntegrity $count` = "clean";then
			echo "$atversion $md5sum" > $versionFile
		fi
	done
fi

#======================================
# 11) setup network for nfs boot
#--------------------------------------
if [ ! -z "$NFSROOT" ];then
	mount -t proc  proc    /proc
	mount -t sysfs sysfs   /sys
	mount -t devpts devpts /dev/pts
	if [ -x /etc/init.d/portmap ];then
		/etc/init.d/portmap start
	elif [ -x /etc/init.d/rpcbind ];then
		/etc/init.d/rpcbind start
	fi
fi

#======================================
# 12) setup console
#--------------------------------------
setupConsole

#======================================
# 13) kill udev
#--------------------------------------
udevSystemStop
umountSystemFilesystems
