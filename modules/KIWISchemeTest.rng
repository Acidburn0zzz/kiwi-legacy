<?xml version="1.0" encoding="UTF-8"?>
<!--
  ================
  FILE          : KIWISchemeTest.rnc
  ****************
  PROJECT       : OpenSUSE Build-Service
  COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH, Germany
                :
  AUTHOR        : Thomas Schraitle <toms@suse.de>
                :
  BELONGS TO    : Operating System images
                :
  DESCRIPTION   : This is the RELAX NG Schema for KIWI
                : test files. The schema is maintained
                : in the relax compact syntax. Any changes should
                : made in !! *** KIWISchemeTest.rnc *** !!
                : 
                :
  STATUS        : Development
  ****************
-->
<grammar xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0">
  <!--
    ==========================================
    Start with test_case
  -->
  <start>
    <ref name="t.test_case"/>
  </start>
  <!--
    ==========================================
    
    Common Patterns
    
  -->
  <div>
    <!--
      Although they are identical, I used different names so they
      can be used in elements or in attributes independently.
    -->
    <define name="t.string.type">
      <text/>
    </define>
    <define name="t.string-attrib.type">
      <text/>
    </define>
  </div>
  <!--
    ==========================================
    
    Element test_case
    
  -->
  <div>
    <define name="t.xsi.attribs">
      <attribute>
        <a:documentation>Any attributes from the xsi namespace
Useful for xsi:noNamespaceSchemaLocation, for example</a:documentation>
        <nsName ns="http://www.w3.org/2001/XMLSchema-instance"/>
      </attribute>
    </define>
    <define name="t.test_case.name.attrib">
      <attribute name="name">
        <a:documentation>The name of the testcases ???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.test_case.description.attrib">
      <attribute name="description">
        <a:documentation>A short description ???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.test_case.summary.attrib">
      <attribute name="summary">
        <a:documentation>A short summary ???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.test_case.attlist">
      <interleave>
        <zeroOrMore>
          <ref name="t.xsi.attribs"/>
        </zeroOrMore>
        <ref name="t.test_case.name.attrib"/>
        <ref name="t.test_case.description.attrib"/>
        <ref name="t.test_case.summary.attrib"/>
      </interleave>
    </define>
    <define name="t.test_case">
      <element name="test_case">
        <a:documentation>This schema specifies the format of the tests for kiwi  images.</a:documentation>
        <ref name="t.test_case.attlist"/>
        <ref name="t.requirements"/>
        <zeroOrMore>
          <ref name="t.test"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element requirements
    
  -->
  <div>
    <define name="t.requirements.attlist">
      <empty/>
    </define>
    <define name="t.requirements">
      <element name="requirements">
        <a:documentation>A list of requirements</a:documentation>
        <ref name="t.requirements.attlist"/>
        <oneOrMore>
          <ref name="t.req"/>
        </oneOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element req
    
  -->
  <div>
    <define name="t.req.type.attrib">
      <attribute name="type">
        <a:documentation>???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.req.place.attrib">
      <attribute name="place">
        <a:documentation>???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.req.attlist">
      <interleave>
        <ref name="t.req.type.attrib"/>
        <optional>
          <ref name="t.req.place.attrib"/>
        </optional>
      </interleave>
    </define>
    <define name="t.req">
      <element name="req">
        <a:documentation>A single requirement</a:documentation>
        <ref name="t.req.attlist"/>
        <ref name="t.string.type"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element test
    
  -->
  <div>
    <define name="t.test.place.attrib">
      <attribute name="place">
        <a:documentation>???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.test.type.attrib">
      <attribute name="type">
        <a:documentation>???</a:documentation>
        <ref name="t.string-attrib.type"/>
      </attribute>
    </define>
    <define name="t.test.attlist">
      <interleave>
        <ref name="t.test.type.attrib"/>
        <ref name="t.test.place.attrib"/>
      </interleave>
    </define>
    <define name="t.test">
      <element name="test">
        <a:documentation>A single test</a:documentation>
        <ref name="t.test.attlist"/>
        <ref name="t.file"/>
        <optional>
          <ref name="t.path"/>
        </optional>
        <zeroOrMore>
          <ref name="t.params"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element path
    
  -->
  <div>
    <define name="t.file.attlist">
      <empty/>
    </define>
    <define name="t.file">
      <element name="file">
        <a:documentation>A filename</a:documentation>
        <ref name="t.file.attlist"/>
        <ref name="t.string.type"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element test
    
  -->
  <div>
    <define name="t.path.attlist">
      <empty/>
    </define>
    <define name="t.path">
      <element name="path">
        <a:documentation>A path</a:documentation>
        <ref name="t.path.attlist"/>
        <ref name="t.string.type"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element params
    
  -->
  <div>
    <define name="t.params.attlist">
      <empty/>
    </define>
    <define name="t.params">
      <element name="params">
        <a:documentation>???</a:documentation>
        <ref name="t.params.attlist"/>
        <ref name="t.string.type"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    
    Element type
    
  -->
  <div>
    <define name="t.type.attlist">
      <empty/>
    </define>
    <define name="t.type">
      <element name="type">
        <a:documentation>???</a:documentation>
        <ref name="t.type.attlist"/>
        <ref name="t.string.type"/>
      </element>
    </define>
  </div>
</grammar>
