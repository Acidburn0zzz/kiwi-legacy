<?xml version="1.0" encoding="UTF-8"?>
<!--
  ================
  FILE          : KIWIScheme.rnc
  ****************
  PROJECT       : OpenSUSE Build-Service
  COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH, Germany
                :
  AUTHOR        : Thomas Schraitle <toms@suse.de>
  AUTHOR        : Marcus Schaefer <ms@suse.de>
                :
  BELONGS TO    : Operating System images
                :
  DESCRIPTION   : This is the RELAX NG Schema for KIWI
                : configuration files. The schema is maintained
                : in the relax compact syntax. Any changes should
                : made in !! *** KIWIScheme.rnc *** !!
                : 
                :
  STATUS        : Development
  
  TODO          : These are some
                : - Isolate more attribute patterns?
                : - Document the patterns
                : - Improve Schema with datatypes?
                : - Test, test, test...
                : - Rework users element to be required. Extend the
                :   content modell with a required root user
  
  FUTURE CHANGES: - Required attributes:
                    * <profile name="" description=""/>
                    * <package name=""/>
                    * <metafile url="" target=""/>
                    * <packages type="">
                    * <opensusePattern name=""/>
                    * <ignore name=""/>
                    * <users group="users">
                    * <user name="" home="" pwd=""/>
                    * <drivers type="">
                    * <file name=""/>
                    * <repository type="">
                    * <source path=""/>
                    * <deploy blocksize="" server="">
                    * <partitions device="/dev/sda">
                    * <partition type="" mountpoint="" number="" size="" target=""/>
                    * <union type="" ro="/dev/sda" rw="/dev/sdb"/>
                    * <configuration dest="" source=""/>
                    * ...
                  - Insert bootstrap in image
                  - Rename repository -> repositories and source -> repository
                  - Change repository+ -> repositories
                  - Rename attribute schemeversion -> schemaversion or version
                  - repository: Add attributes pwd and username
                  - image: rename attribute "name" -> basename
                  - user: rename attribute "name" -> "login"
                  - instrepo, opensusepattern, package: find a better(?)
                    name for attribute "name"
                  - union: rename attribute "name" -> "overlay" (?)
                  - Fix camel case in element opensusePattern and
                    attributes patternPackageType and patternType
  
  ****************
-->
<grammar xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:db="http://docbook.org/ns/docbook" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <db:info>
    <db:releaseinfo>$Id$</db:releaseinfo>
    <db:releaseinfo>RNC Schema Version 1.4</db:releaseinfo>
    <db:pubdate>START</db:pubdate>
    <db:pubdate>2008-01-08</db:pubdate>
  </db:info>
  <!--
    ==========================================
    start with image description
    
  -->
  <start>
    <ref name="k.image">
      <a:documentation>The start pattern of an image</a:documentation>
    </ref>
  </start>
  <!--
    ==========================================
    main block: <image>
    
  -->
  <div>
    <define name="k.image.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.image.noNamespaceSchemaLocation.attribute">
      <attribute name="xsi:noNamespaceSchemaLocation">
        <a:documentation>The location of the XSD Schema (not relevant for RELAX NG or DTD)</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </define>
    <define name="k.image.schemaLocation.attribute">
      <attribute name="xsi:schemaLocation">
        <a:documentation>A pair of URI references: First is a namespace name,
second the location of the XSD Schema
(not relevant for RELAX NG or DTD)</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </define>
    <define name="k.image.inherit.attribute">
      <attribute name="inherit">
        <a:documentation>Path to an image description directory from which
the package Information is inherited</a:documentation>
      </attribute>
    </define>
    <define name="k.image.schemeversion.attribute">
      <attribute name="schemeversion">
        <a:documentation>The allowed Schema version (fixed value)</a:documentation>
        <value>1.4</value>
      </attribute>
    </define>
    <define name="k.image.attlist">
      <interleave>
        <ref name="k.image.name.attribute"/>
        <optional>
          <ref name="k.image.inherit.attribute"/>
        </optional>
        <ref name="k.image.schemeversion.attribute"/>
        <optional>
          <choice>
            <optional>
              <ref name="k.image.noNamespaceSchemaLocation.attribute"/>
            </optional>
            <optional>
              <ref name="k.image.schemaLocation.attribute"/>
            </optional>
          </choice>
        </optional>
      </interleave>
    </define>
    <define name="k.image">
      <element name="image">
        <a:documentation>The root element of the configuration file</a:documentation>
        <ref name="k.image.attlist"/>
        <ref name="k.description"/>
        <ref name="k.preferences"/>
        <optional>
          <ref name="k.profiles"/>
        </optional>
        <optional>
          <ref name="k.instsource"/>
        </optional>
        <zeroOrMore>
          <ref name="k.users"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="k.drivers"/>
        </zeroOrMore>
        <oneOrMore>
          <ref name="k.repository"/>
        </oneOrMore>
        <optional>
          <ref name="k.deploy"/>
        </optional>
        <optional>
          <ref name="k.split"/>
        </optional>
        <zeroOrMore>
          <ref name="k.packages"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common attributes
    
  -->
  <define name="k.name.attribute">
    <attribute name="name">
      <a:documentation>A name</a:documentation>
    </attribute>
  </define>
  <define name="k.arch.attribute">
    <attribute name="arch">
      <a:documentation>An architecture</a:documentation>
    </attribute>
  </define>
  <define name="k.description.attribute">
    <attribute name="description">
      <a:documentation>A short description</a:documentation>
    </attribute>
  </define>
  <define name="k.path.attribute">
    <attribute name="path">
      <a:documentation>A path</a:documentation>
    </attribute>
  </define>
  <define name="k.profiles.attribute">
    <attribute name="profiles">
      <a:documentation>A profile name which binds the section to this name</a:documentation>
    </attribute>
  </define>
  <define name="k.pwd.attribute">
    <attribute name="pwd">
      <a:documentation>The password</a:documentation>
    </attribute>
  </define>
  <define name="k.script.attribute">
    <attribute name="script">
      <a:documentation>A script hook for meta files to be called after the
file was fetched</a:documentation>
    </attribute>
  </define>
  <define name="k.source.attribute">
    <attribute name="source">
      <a:documentation>A location where packages can be found to build an
installation source from</a:documentation>
    </attribute>
  </define>
  <define name="k.size.attribute">
    <attribute name="size">
      <a:documentation>A partition size or optional image size</a:documentation>
    </attribute>
  </define>
  <define name="k.dest.attribute">
    <attribute name="dest">
      <a:documentation>Destination of a ressource</a:documentation>
    </attribute>
  </define>
  <define name="k.username.attribute">
    <attribute name="username">
      <a:documentation>A name of a user</a:documentation>
    </attribute>
  </define>
  <!--
    ==========================================
    common element <author>
    
  -->
  <div>
    <define name="k.author.attlist">
      <empty/>
    </define>
    <define name="k.author">
      <element name="author">
        <a:documentation>Author of the image</a:documentation>
        <ref name="k.author.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <compressed>
    
  -->
  <div>
    <define name="k.compressed.attlist">
      <empty/>
    </define>
    <define name="k.compressed">
      <element name="compressed">
        <a:documentation>Compress image. The compression may be changed by the
code according to the image output type</a:documentation>
        <ref name="k.compressed.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <configuration>
    
  -->
  <div>
    <define name="k.configuration.source.attribute">
      <ref name="k.source.attribute"/>
    </define>
    <define name="k.configuration.dest.attribute">
      <ref name="k.dest.attribute"/>
    </define>
    <define name="k.configuration.attlist">
      <interleave>
        <ref name="k.configuration.source.attribute"/>
        <ref name="k.configuration.dest.attribute"/>
      </interleave>
    </define>
    <define name="k.configuration">
      <element name="configuration">
        <a:documentation>As part of the network deploy configuration this section 
specifies the configuration files which should be included
into the image after deployment</a:documentation>
        <ref name="k.configuration.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <commandline>
    
  -->
  <div>
    <define name="k.commandline.attlist">
      <empty/>
    </define>
    <define name="k.commandline">
      <element name="commandline">
        <a:documentation>As part of the network deploy configuration this section
specifies the kernel boot commandline used when the image
gets deployed</a:documentation>
        <ref name="k.commandline.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <contact>
    
  -->
  <div>
    <define name="k.contact.attlist">
      <empty/>
    </define>
    <define name="k.contact">
      <element name="contact">
        <a:documentation>Contact information from the author, like email etc.</a:documentation>
        <ref name="k.contact.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultbaseroot>
    
  -->
  <div>
    <define name="k.defaultbaseroot.attlist">
      <empty/>
    </define>
    <define name="k.defaultbaseroot">
      <element name="defaultbaseroot">
        <a:documentation>Default path if baseroot option is no specified</a:documentation>
        <ref name="k.defaultbaseroot.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultdestination>
    
  -->
  <div>
    <define name="k.defaultdestination.attlist">
      <empty/>
    </define>
    <define name="k.defaultdestination">
      <element name="defaultdestination">
        <a:documentation>Default path if destdir option is not specified</a:documentation>
        <ref name="k.defaultdestination.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultroot>
    
  -->
  <div>
    <define name="k.defaultroot.attlist">
      <empty/>
    </define>
    <define name="k.defaultroot">
      <element name="defaultroot">
        <a:documentation>Default root directory name if root option is not specified</a:documentation>
        <ref name="k.defaultroot.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <file>
    
  -->
  <div>
    <define name="k.file.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.file.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.file.attlist">
      <interleave>
        <ref name="k.file.name.attribute"/>
        <optional>
          <ref name="k.file.arch.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.file">
      <element name="file">
        <a:documentation>A pointer to a file</a:documentation>
        <ref name="k.file.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <ignore>
    
  -->
  <div>
    <define name="k.ignore.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.ignore.attlist">
      <ref name="k.ignore.name.attribute"/>
    </define>
    <define name="k.ignore">
      <element name="ignore">
        <a:documentation>Ignores a package</a:documentation>
        <ref name="k.ignore.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <initrd>
    
  -->
  <div>
    <define name="k.initrd.attlist">
      <empty/>
    </define>
    <define name="k.initrd">
      <element name="initrd">
        <a:documentation>As part of the network deploy configuration this element
specifies where the boot image (initrd) can be found</a:documentation>
        <ref name="k.initrd.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <instrepo>
    
  -->
  <div>
    <define name="k.instrepo.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.instrepo.priority.attribute">
      <attribute name="priority">
        <a:documentation>Search priority for packages in this repo</a:documentation>
      </attribute>
    </define>
    <define name="k.instrepo.username.attribute">
      <ref name="k.username.attribute"/>
    </define>
    <define name="k.instrepo.pwd.attribute">
      <ref name="k.pwd.attribute"/>
    </define>
    <define name="k.instrepo.attlist">
      <interleave>
        <ref name="k.instrepo.name.attribute"/>
        <ref name="k.instrepo.priority.attribute"/>
        <optional>
          <ref name="k.instrepo.username.attribute"/>
        </optional>
        <optional>
          <ref name="k.instrepo.pwd.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.instrepo">
      <element name="instrepo">
        <a:documentation>Name of a repository which is used to create an
installation source</a:documentation>
        <ref name="k.instrepo.attlist"/>
        <ref name="k.source"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <kernel>
    
  -->
  <div>
    <define name="k.kernel.attlist">
      <empty/>
    </define>
    <define name="k.kernel">
      <element name="kernel">
        <a:documentation>As part of the network deploy configuration this section
specifies the where to find the boot kernel</a:documentation>
        <ref name="k.kernel.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <keytable>
    
  -->
  <div>
    <define name="k.keytable.attlist">
      <empty/>
    </define>
    <define name="k.keytable">
      <element name="keytable">
        <a:documentation>Image keytable setup. The value will be part of
/etc/sysconfig/keyboard</a:documentation>
        <ref name="k.keytable.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <locale>
    
  -->
  <div>
    <!-- locale -->
    <define name="k.locale.attlist">
      <empty/>
    </define>
    <define name="k.locale">
      <element name="locale">
        <a:documentation>Image locale setup. The value will be part of
/etc/sysconfig/language</a:documentation>
        <ref name="k.locale.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <metadata>
    
  -->
  <div>
    <define name="k.metadata.attlist">
      <empty/>
    </define>
    <define name="k.metadata">
      <element name="metadata">
        <a:documentation>When building an installation source not only packages are
relevant but also metadata. metadata are files or packages combined
with script calls. If a package is specified as metadata it will
not be installed by rpm but its cpio archive is extracted in a
specific way</a:documentation>
        <ref name="k.metadata.attlist"/>
        <oneOrMore>
          <ref name="k.repopackage"/>
        </oneOrMore>
        <zeroOrMore>
          <ref name="k.metafile"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <metafile>
    
  -->
  <div>
    <define name="k.metafile.url.attribute">
      <attribute name="url">
        <a:documentation>URL where to find the metafile</a:documentation>
      </attribute>
    </define>
    <define name="k.metafile.script.attribute">
      <ref name="k.script.attribute"/>
    </define>
    <define name="k.metafile.target.attribute">
      <attribute name="target">
        <a:documentation>Destination path where to download the file</a:documentation>
      </attribute>
    </define>
    <define name="k.metafile.attlist">
      <interleave>
        <ref name="k.metafile.url.attribute"/>
        <ref name="k.metafile.script.attribute"/>
        <ref name="k.metafile.target.attribute"/>
      </interleave>
    </define>
    <define name="k.metafile">
      <element name="metafile">
        <a:documentation>A file pointer optionally bundled with a script</a:documentation>
        <ref name="k.metafile.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <opensusePattern>
    
  -->
  <div>
    <define name="k.opensusepattern.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.opensusepattern.attlist">
      <ref name="k.opensusepattern.name.attribute"/>
    </define>
    <define name="k.opensusepattern">
      <element name="opensusePattern">
        <a:documentation>Name of a pattern from openSUSE</a:documentation>
        <ref name="k.opensusepattern.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <repopackage>
    
  -->
  <div>
    <define name="k.repopackage.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.repopackage.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.repopackage.priority.attribute">
      <attribute name="priority">
        <a:documentation>Specifies the search priority</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.addarch.attribute">
      <attribute name="addarch">
        <a:documentation>Specifies that this package should
additionally add the same package from the given arch</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.removearch.attribute">
      <attribute name="removearch">
        <a:documentation>Specifies that the package with the
given arch should be removed</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.forcearch.attribute">
      <attribute name="forcearch">
        <a:documentation>Specifies that the package with
the given arch should be used in any case</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.source.attribute">
      <ref name="k.source.attribute"/>
    </define>
    <define name="k.repopackage.script.attribute">
      <ref name="k.script.attribute"/>
    </define>
    <define name="k.repopackage.attlist">
      <interleave>
        <ref name="k.repopackage.name.attribute"/>
        <optional>
          <ref name="k.repopackage.arch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.priority.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.addarch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.removearch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.forcearch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.source.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.script.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.repopackage">
      <element name="repopackage">
        <a:documentation>Name of an instsource package</a:documentation>
        <ref name="k.repopackage.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <package>
    
  -->
  <div>
    <define name="k.package.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.package.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.package.attlist">
      <interleave>
        <ref name="k.package.name.attribute"/>
        <optional>
          <ref name="k.package.arch.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.package">
      <element name="package">
        <a:documentation>Name of an image package</a:documentation>
        <ref name="k.package.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <packagemanager>
    
  -->
  <div>
    <define name="k.packagemanager.attlist">
      <empty/>
    </define>
    <define name="k.packagemanager">
      <element name="packagemanager">
        <a:documentation>The package manager used for package installation
could be either zypper or smart</a:documentation>
        <group>
          <ref name="k.packagemanager.attlist"/>
          <text/>
        </group>
        <!-- zypper or smart -->
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <partitions>
    
  -->
  <div>
    <define name="k.partitions.device.attribute">
      <attribute name="device">
        <a:documentation>As part of the network deploy configuration this section
specifies the disk device name</a:documentation>
      </attribute>
    </define>
    <define name="k.partitions.attlist">
      <optional>
        <ref name="k.partitions.device.attribute"/>
      </optional>
    </define>
    <define name="k.partitions">
      <element name="partitions">
        <a:documentation>A list of partitions</a:documentation>
        <ref name="k.partitions.attlist"/>
        <oneOrMore>
          <ref name="k.partition"/>
        </oneOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <partition>
    
  -->
  <div>
    <define name="k.partition.type.attribute">
      <attribute name="type">
        <a:documentation>Partition Type identifier, see fdisk for details</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.number.attribute">
      <attribute name="number">
        <a:documentation>Partition ID</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.size.attribute">
      <ref name="k.size.attribute"/>
    </define>
    <define name="k.partition.mountpoint.attribute">
      <attribute name="mountpoint">
        <a:documentation>Mount path for this partition</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.target.attribute">
      <attribute name="target">
        <a:documentation>Is a real target or not which means is part of
the /etc/fstab file or not</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.partition.attlist">
      <interleave>
        <ref name="k.partition.type.attribute"/>
        <ref name="k.partition.number.attribute"/>
        <optional>
          <ref name="k.partition.size.attribute"/>
        </optional>
        <optional>
          <ref name="k.partition.mountpoint.attribute"/>
        </optional>
        <optional>
          <ref name="k.partition.target.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.partition">
      <element name="partition">
        <a:documentation>A partition</a:documentation>
        <ref name="k.partition.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <persistent>
    
  -->
  <div>
    <define name="k.persistent.attlist">
      <empty/>
    </define>
    <define name="k.persistent">
      <element name="persistent">
        <a:documentation>As part of the split section the persistent element
specifies file names which are in the read-write disk area</a:documentation>
        <ref name="k.persistent.attlist"/>
        <zeroOrMore>
          <ref name="k.file"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <profile>
    
  -->
  <div>
    <define name="k.profile.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.profile.description.attribute">
      <attribute name="description">
        <a:documentation>Description of how this profiles influences the image</a:documentation>
      </attribute>
    </define>
    <define name="k.profile.attlist">
      <interleave>
        <ref name="k.profile.name.attribute"/>
        <ref name="k.profile.description.attribute"/>
      </interleave>
    </define>
    <define name="k.profile">
      <element name="profile">
        <a:documentation>Profiles creates a namespace on an image description and
thus can be used to have one description with different
profiles for example KDE and GNOME including different
packages</a:documentation>
        <ref name="k.profile.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <repository>
    
  -->
  <div>
    <define name="k.repository.type.attribute">
      <attribute name="type">
        <choice>
          <value>apt-deb</value>
          <value>apt-rpm</value>
          <value>deb-dir</value>
          <value>mirrors</value>
          <value>red-carpet</value>
          <value>rpm-dir</value>
          <value>rpm-md</value>
          <value>slack-site</value>
          <value>up2date-mirrors</value>
          <value>urpmi</value>
          <value>yast2</value>
        </choice>
      </attribute>
    </define>
    <define name="k.repository.status.attribute">
      <attribute name="status">
        <a:documentation>specifies the status of the repository. This can be
replacable or if not specified it's a must have repository</a:documentation>
        <choice>
          <value>replaceable</value>
          <value>fixed</value>
        </choice>
      </attribute>
    </define>
    <define name="k.repository.attlist">
      <interleave>
        <ref name="k.repository.type.attribute"/>
        <optional>
          <ref name="k.repository.status.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.repository">
      <element name="repository">
        <a:documentation>The name of the repository</a:documentation>
        <ref name="k.repository.attlist"/>
        <ref name="k.source"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <rpm-check-signatures>
    
  -->
  <div>
    <define name="k.rpm-check-signatures.attlist">
      <empty/>
    </define>
    <define name="k.rpm-check-signatures">
      <element name="rpm-check-signatures">
        <a:documentation>Setup if the package manager should check the package
signature or not. This option could be ignored according
to the used package manager</a:documentation>
        <ref name="k.rpm-check-signatures.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <rpm-force>
    
  -->
  <div>
    <define name="k.rpm-force.attlist">
      <empty/>
    </define>
    <define name="k.rpm-force">
      <element name="rpm-force">
        <a:documentation>Setup if the package manager should force the install of the
package or not. This option could be ignored according
to the used package manager</a:documentation>
        <ref name="k.rpm-force.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <size>
    
  -->
  <div>
    <define name="k.size.unit.attribute">
      <attribute name="unit">
        <a:documentation>The unit of the image</a:documentation>
        <choice>
          <value>M</value>
          <value>G</value>
        </choice>
      </attribute>
    </define>
    <define name="k.size.attlist">
      <optional>
        <ref name="k.size.unit.attribute"/>
      </optional>
    </define>
    <define name="k.size">
      <element name="size">
        <a:documentation>Specifies the size of an image in (M)egabyte or (G)igabyte</a:documentation>
        <ref name="k.size.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <source>
    
  -->
  <div>
    <define name="k.source.path.attribute">
      <ref name="k.path.attribute"/>
    </define>
    <define name="k.source.attlist">
      <ref name="k.source.path.attribute"/>
    </define>
    <define name="k.source">
      <element name="source">
        <a:documentation>A pointer to a repository/package source</a:documentation>
        <ref name="k.source.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <specification>
    
  -->
  <div>
    <define name="k.specification.attlist">
      <empty/>
    </define>
    <define name="k.specification">
      <element name="specification">
        <a:documentation>A detailed description of this image and what it can be
used for.</a:documentation>
        <ref name="k.specification.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <temporary>
    
  -->
  <div>
    <define name="k.temporary.attlist">
      <empty/>
    </define>
    <define name="k.temporary">
      <element name="temporary">
        <a:documentation>As part of the split section the temporary element
specifies file names which are in the RAM disk  area</a:documentation>
        <ref name="k.temporary.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <timeout>
    
  -->
  <div>
    <define name="k.timeout.attlist">
      <empty/>
    </define>
    <define name="k.timeout">
      <element name="timeout">
        <a:documentation>As part of the network deploy configuration this section 
specifies an atftp download timeout</a:documentation>
        <ref name="k.timeout.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <timezone>
    
  -->
  <div>
    <define name="k.timezone.attlist">
      <empty/>
    </define>
    <define name="k.timezone">
      <element name="timezone">
        <a:documentation>Image timezone setup. The value will be used to search
the correct timezone and copy it to /etc/localtime</a:documentation>
        <ref name="k.timezone.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <type>
    
  -->
  <div>
    <define name="k.type.baseroot.attribute">
      <attribute name="baseroot">
        <a:documentation>Specify the path to a pre created base root system.</a:documentation>
      </attribute>
    </define>
    <define name="k.type.bootprofile.attribute">
      <attribute name="bootprofile">
        <a:documentation>Specifies the boot profile if defined in the boot image
description. Used when KIWI option add-profile is used</a:documentation>
      </attribute>
    </define>
    <define name="k.type.boot.attribute">
      <attribute name="boot">
        <a:documentation>Specifies the path of the boot image (initrd), relative
to /usr/share/kiwi/image</a:documentation>
      </attribute>
    </define>
    <define name="k.type.checkprebuilt.attribute">
      <attribute name="checkprebuilt">
        <a:documentation>Activates whether KIWI should search for a prebuild boot
image or not</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.type.flags.attribute">
      <attribute name="flags">
        <a:documentation>Specifies flags for the image type. This could be compressed
or unified and applies to the iso type only</a:documentation>
        <choice>
          <value>unified</value>
          <value>compressed</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.filesystem.attribute">
      <attribute name="filesystem">
        <a:documentation>Specifies the filesystem:
ext2 | ext3 | reiserfs | squashfs | cpio. or a combination
of two of these types with the split image type</a:documentation>
      </attribute>
    </define>
    <define name="k.type.format.attribute">
      <attribute name="format">
        <a:documentation>Specifies the format of the virtual disk. This applies to the
vmx/oem types only.</a:documentation>
        <choice>
          <value>vvfat</value>
          <value>vpc</value>
          <value>bochs</value>
          <value>dmg</value>
          <value>cloop</value>
          <value>vmdk</value>
          <value>qcow</value>
          <value>cow</value>
          <value>iso</value>
          <value>usb</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.primary.attribute">
      <attribute name="primary">
        <a:documentation>Specifies the primary type (choose KIWI option type)</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.type.attlist">
      <interleave>
        <optional>
          <ref name="k.type.checkprebuilt.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.bootprofile.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.boot.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.flags.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.filesystem.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.baseroot.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.format.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.primary.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.type">
      <element name="type">
        <a:documentation>The image type of the logical extend.</a:documentation>
        <ref name="k.type.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <union>
    
  -->
  <div>
    <define name="k.union.ro.attribute">
      <attribute name="ro">
        <a:documentation>Device only for read-only </a:documentation>
      </attribute>
    </define>
    <define name="k.union.rw.attribute">
      <attribute name="rw">
        <a:documentation>Device for Read-Write</a:documentation>
      </attribute>
    </define>
    <define name="k.union.type.attribute">
      <attribute name="type">
        <choice>
          <value>aufs</value>
          <value>unionfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.union.attlist">
      <interleave>
        <ref name="k.union.ro.attribute"/>
        <ref name="k.union.rw.attribute"/>
        <ref name="k.union.type.attribute"/>
      </interleave>
    </define>
    <define name="k.union">
      <element name="union">
        <a:documentation>As part of the network deploy configuration this section
specifies the overlay filesystem setup if required by the
filesystem type of the system image. An overlay setup is
only required if the system image uses a squashfs compressed
filesystem.</a:documentation>
        <ref name="k.union.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <user>
    
  -->
  <div>
    <define name="k.user.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.user.realname.attribute">
      <attribute name="realname">
        <a:documentation>The name of an user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.pwd.attribute">
      <ref name="k.pwd.attribute"/>
    </define>
    <define name="k.user.home.attribute">
      <attribute name="home">
        <a:documentation>The home directory for this user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.shell.attribute">
      <attribute name="shell">
        <a:documentation>The shell for this user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.attlist">
      <interleave>
        <ref name="k.user.name.attribute"/>
        <optional>
          <ref name="k.user.realname.attribute"/>
        </optional>
        <ref name="k.user.pwd.attribute"/>
        <ref name="k.user.home.attribute"/>
        <optional>
          <ref name="k.user.shell.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.user">
      <element name="user">
        <a:documentation>A user with name, password, path to its home and shell</a:documentation>
        <ref name="k.user.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <version>
    
  -->
  <div>
    <define name="k.version.attlist">
      <empty/>
    </define>
    <define name="k.version">
      <element name="version">
        <a:documentation>A version number for the image, consists of Major.Minor.Release </a:documentation>
        <ref name="k.version.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <deploy>
    
  -->
  <div>
    <define name="k.deploy.server.attribute">
      <attribute name="server">
        <a:documentation>Name or IP Address of server for downloading the data</a:documentation>
      </attribute>
    </define>
    <define name="k.deploy.blocksize.attribute">
      <attribute name="blocksize">
        <a:documentation>Blocksize value used for atftp downloads</a:documentation>
      </attribute>
    </define>
    <define name="k.deploy.attlist">
      <interleave>
        <optional>
          <ref name="k.deploy.server.attribute"/>
        </optional>
        <optional>
          <ref name="k.deploy.blocksize.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.deploy">
      <element name="deploy">
        <a:documentation>The deploy section is used to allow kiwi to create the
config.&lt;MAC&gt; file required by PXE based network images.
the contents of this file controls the image deploy process</a:documentation>
        <ref name="k.deploy.attlist"/>
        <optional>
          <ref name="k.timeout"/>
        </optional>
        <optional>
          <ref name="k.commandline"/>
        </optional>
        <optional>
          <ref name="k.kernel"/>
        </optional>
        <optional>
          <ref name="k.initrd"/>
        </optional>
        <optional>
          <ref name="k.partitions"/>
        </optional>
        <optional>
          <ref name="k.union"/>
        </optional>
        <zeroOrMore>
          <ref name="k.configuration"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <description>
    
  -->
  <div>
    <define name="k.description.type.attribute">
      <attribute name="type">
        <a:documentation>Kiwi distinguishes between two basic image description types
which uses the same format but one is created and provided by
the kiwi developers and the other is created by the users of
kiwi. The type=boot specifies a boot image (initrd) which should
be provided by the kiwi developers wheras type=system specifies
a standard image description created by a kiwi user.</a:documentation>
        <choice>
          <value>boot</value>
          <value>system</value>
        </choice>
      </attribute>
    </define>
    <define name="k.description.attlist">
      <ref name="k.description.type.attribute"/>
    </define>
    <define name="k.description">
      <element name="description">
        <a:documentation>A short description</a:documentation>
        <ref name="k.description.attlist"/>
        <ref name="k.author"/>
        <oneOrMore>
          <ref name="k.contact"/>
        </oneOrMore>
        <ref name="k.specification"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <drivers>
    
  -->
  <div>
    <define name="k.drivers.type.attribute">
      <attribute name="type">
        <choice>
          <value>drivers</value>
          <value>usbdrivers</value>
          <value>scsidrivers</value>
          <value>netdrivers</value>
        </choice>
      </attribute>
    </define>
    <define name="k.drivers.profiles.attribute">
      <ref name="k.profiles.attribute"/>
    </define>
    <define name="k.drivers.attlist">
      <interleave>
        <ref name="k.drivers.type.attribute"/>
        <optional>
          <ref name="k.drivers.profiles.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.drivers">
      <element name="drivers">
        <a:documentation>A collection of driver files </a:documentation>
        <ref name="k.drivers.attlist"/>
        <oneOrMore>
          <ref name="k.file"/>
        </oneOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <instsource>
    
  -->
  <div>
    <define name="k.instsource.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.instsource.attlist">
      <ref name="k.instsource.arch.attribute"/>
    </define>
    <define name="k.instsource">
      <element name="instsource">
        <a:documentation>The instsource element is used to describe the packages
and the metadata which is required to build an installation
source suitable for Novell SUSE Linux installation media.
From such a source it should be possible to create the
standard SUSE CD/DVD's as well as use this source as
repository for image building</a:documentation>
        <ref name="k.instsource.attlist"/>
        <oneOrMore>
          <ref name="k.instrepo"/>
        </oneOrMore>
        <ref name="k.metadata"/>
        <ref name="k.repopackages"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <repopackages>
    
  -->
  <div>
    <define name="k.repopackages.attlist">
      <empty/>
    </define>
    <define name="k.repopackages">
      <element name="repopackages">
        <a:documentation>The repopackages elements specifies a set of packages which
are used for creating a Novell SUSE installation source</a:documentation>
        <ref name="k.repopackages.attlist"/>
        <zeroOrMore>
          <ref name="k.repopackage"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <packages>
    
  -->
  <div>
    <define name="k.packages.type.attribute">
      <attribute name="type">
        <choice>
          <value>image</value>
          <value>boot</value>
          <value>delete</value>
          <value>xen</value>
          <value>vmware</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.memory.attribute">
      <attribute name="memory">
        <a:documentation>The memory setup for the guest VM. Used only with the
packages types xen and vmware</a:documentation>
      </attribute>
    </define>
    <define name="k.packages.disk.attribute">
      <attribute name="disk">
        <a:documentation>The virtual disk device name of the guest VM. Used only
with the packages types xen and vmware</a:documentation>
      </attribute>
    </define>
    <define name="k.packages.profiles.attribute">
      <attribute name="profiles">
        <a:documentation>Namespace this section applies to. If not specified it
applies to all namespaces</a:documentation>
      </attribute>
    </define>
    <define name="k.packages.patternType.attribute">
      <attribute name="patternType">
        <a:documentation>Selection type for patterns. Could be onlyRequired
plusSuggested or plusRecommended</a:documentation>
        <choice>
          <value>onlyRequired</value>
          <value>plusSuggested</value>
          <value>plusRecommended</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.patternPackageType.attribute">
      <attribute name="patternPackageType">
        <a:documentation>Selection type for packages in patterns. Could be
onlyRequired, plusSuggested or plusRecommended</a:documentation>
        <choice>
          <value>onlyRequired</value>
          <value>plusSuggested</value>
          <value>plusRecommended</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.attlist">
      <interleave>
        <ref name="k.packages.type.attribute"/>
        <optional>
          <ref name="k.packages.memory.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.disk.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.profiles.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.patternType.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.patternPackageType.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.packages">
      <element name="packages">
        <a:documentation>The packages elements specifies a set of packages and/or patterns
which are used in different stages of the image building process
and also depends of the selected image output type</a:documentation>
        <ref name="k.packages.attlist"/>
        <zeroOrMore>
          <ref name="k.package"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="k.opensusepattern"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="k.ignore"/>
        </zeroOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <preferences>
    
  -->
  <div>
    <define name="k.preferences.attlist">
      <empty/>
    </define>
    <define name="k.preferences">
      <element name="preferences">
        <a:documentation>Configuration information needed for logical extend</a:documentation>
        <ref name="k.preferences.attlist"/>
        <oneOrMore>
          <ref name="k.type"/>
        </oneOrMore>
        <ref name="k.version"/>
        <optional>
          <ref name="k.size"/>
        </optional>
        <optional>
          <ref name="k.compressed"/>
        </optional>
        <optional>
          <ref name="k.packagemanager"/>
        </optional>
        <optional>
          <ref name="k.rpm-check-signatures"/>
        </optional>
        <optional>
          <ref name="k.rpm-force"/>
        </optional>
        <optional>
          <ref name="k.keytable"/>
        </optional>
        <optional>
          <ref name="k.timezone"/>
        </optional>
        <optional>
          <ref name="k.locale"/>
        </optional>
        <optional>
          <ref name="k.defaultdestination"/>
        </optional>
        <optional>
          <ref name="k.defaultroot"/>
        </optional>
        <optional>
          <ref name="k.defaultbaseroot"/>
        </optional>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <profiles>
    
  -->
  <div>
    <define name="k.profiles.attlist">
      <empty/>
    </define>
    <define name="k.profiles">
      <element name="profiles">
        <a:documentation>Namespace section which creates a namespace and the
description of this namespace. The section packages and
drivers can bind itself to one of the listed namespaces</a:documentation>
        <ref name="k.profiles.attlist"/>
        <oneOrMore>
          <ref name="k.profile"/>
        </oneOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <split>
    
  -->
  <div>
    <define name="k.split.attlist">
      <empty/>
    </define>
    <define name="k.split">
      <element name="split">
        <a:documentation>When the image type split is requested the image will be splitted
into a read-only and a read-write image portion. Each portion
can have different filesystems and the split section describes
which files/directories should go in what portion</a:documentation>
        <ref name="k.split.attlist"/>
        <optional>
          <ref name="k.temporary"/>
        </optional>
        <optional>
          <ref name="k.persistent"/>
        </optional>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <users>
    
  -->
  <div>
    <define name="k.users.group.attribute">
      <attribute name="group">
        <a:documentation>Contains the group to which the user belongs</a:documentation>
      </attribute>
    </define>
    <define name="k.users.attlist">
      <ref name="k.users.group.attribute"/>
    </define>
    <define name="k.users">
      <element name="users">
        <a:documentation>A list of users</a:documentation>
        <ref name="k.users.attlist"/>
        <oneOrMore>
          <ref name="k.user"/>
        </oneOrMore>
      </element>
    </define>
  </div>
</grammar>
