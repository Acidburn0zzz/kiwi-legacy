<?xml version="1.0" encoding="UTF-8"?>
<!--
  ================
  FILE          : KIWIScheme.rnc
  ****************
  PROJECT       : OpenSUSE Build-Service
  COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH, Germany
                :
  AUTHOR        : Thomas Schraitle <toms@suse.de>
  AUTHOR        : Marcus Schaefer <ms@suse.de>
                :
  BELONGS TO    : Operating System images
                :
  DESCRIPTION   : This is the RELAX NG Schema for KIWI
                : configuration files. The schema is maintained
                : in the relax compact syntax. Any changes should
                : made in !! *** KIWIScheme.rnc *** !!
                : 
                :
  STATUS        : Development
  ****************
-->
<grammar xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns:db="http://docbook.org/ns/docbook" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <db:info>
    <db:releaseinfo>$Id: kiwi.rnc 2957 2008-01-11 12:53:39Z thomas-schraitle $</db:releaseinfo>
    <db:releaseinfo>RNC Schema Version 2.4</db:releaseinfo>
    <db:pubdate>START</db:pubdate>
    <db:pubdate>2008-01-08</db:pubdate>
  </db:info>
  <!--
    ==========================================
    start with image description
    
  -->
  <start>
    <ref name="k.image">
      <a:documentation>The start pattern of an image</a:documentation>
    </ref>
  </start>
  <!--
    ==========================================
    main block: <image>
    
  -->
  <div>
    <define name="k.image.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.image.noNamespaceSchemaLocation.attribute">
      <attribute name="xsi:noNamespaceSchemaLocation">
        <a:documentation>The location of the XSD Schema (not relevant for RELAX NG or DTD)</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </define>
    <define name="k.image.schemaLocation.attribute">
      <attribute name="xsi:schemaLocation">
        <a:documentation>A pair of URI references: First is a namespace name,
second the location of the XSD Schema
(not relevant for RELAX NG or DTD)</a:documentation>
        <data type="anyURI"/>
      </attribute>
    </define>
    <define name="k.image.inherit.attribute">
      <attribute name="inherit">
        <a:documentation>Path to an image description directory from which
the package Information is inherited</a:documentation>
      </attribute>
    </define>
    <define name="k.image.schemeversion.attribute">
      <attribute name="schemeversion">
        <a:documentation>The allowed Schema version (fixed value)</a:documentation>
        <value>2.4</value>
      </attribute>
    </define>
    <define name="k.image.kiwirevision.attribute">
      <attribute name="kiwirevision">
        <a:documentation>A kiwi SVN revision number which is known to build
a working image from this description. If the kiwi SVN
revision is less than the specified value the
process will exit.</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.image.id">
      <attribute name="id">
        <a:documentation>An identification number which is represented in a file
named /etc/ImageID</a:documentation>
        <data type="string">
          <param name="length">10</param>
        </data>
      </attribute>
    </define>
    <define name="k.image.attlist">
      <interleave>
        <ref name="k.image.name.attribute"/>
        <optional>
          <ref name="k.image.inherit.attribute"/>
        </optional>
        <optional>
          <ref name="k.image.kiwirevision.attribute"/>
        </optional>
        <optional>
          <ref name="k.image.id"/>
        </optional>
        <ref name="k.image.schemeversion.attribute"/>
        <optional>
          <choice>
            <optional>
              <ref name="k.image.noNamespaceSchemaLocation.attribute"/>
            </optional>
            <optional>
              <ref name="k.image.schemaLocation.attribute"/>
            </optional>
          </choice>
        </optional>
      </interleave>
    </define>
    <define name="k.image">
      <element name="image">
        <a:documentation>The root element of the configuration file		</a:documentation>
        <db:para>Each KIWI configuration file consists of a root element
        image.</db:para>
        <interleave>
          <ref name="k.image.attlist"/>
          <ref name="k.description"/>
          <ref name="k.preferences"/>
          <optional>
            <ref name="k.profiles"/>
          </optional>
          <optional>
            <ref name="k.instsource"/>
          </optional>
          <zeroOrMore>
            <ref name="k.users"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.drivers"/>
          </zeroOrMore>
          <oneOrMore>
            <ref name="k.repository"/>
          </oneOrMore>
          <optional>
            <ref name="k.deploy"/>
          </optional>
          <optional>
            <ref name="k.split"/>
          </optional>
          <zeroOrMore>
            <ref name="k.packages"/>
          </zeroOrMore>
          <optional>
            <ref name="k.vmwareconfig"/>
          </optional>
          <optional>
            <ref name="k.xenconfig"/>
          </optional>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common attributes
    
  -->
  <define name="k.id.attribute">
    <attribute name="id">
      <a:documentation>An ID</a:documentation>
      <data type="ID"/>
    </attribute>
  </define>
  <define name="k.name.attribute">
    <attribute name="name">
      <a:documentation>A name</a:documentation>
    </attribute>
  </define>
  <define name="k.arch.attribute">
    <attribute name="arch">
      <a:documentation>An architecture</a:documentation>
    </attribute>
  </define>
  <define name="k.description.attribute">
    <attribute name="description">
      <a:documentation>A short description</a:documentation>
    </attribute>
  </define>
  <define name="k.path.attribute">
    <attribute name="path">
      <a:documentation>A path</a:documentation>
    </attribute>
  </define>
  <define name="k.profiles.attribute">
    <attribute name="profiles">
      <a:documentation>A profile name which binds the section to this name</a:documentation>
    </attribute>
  </define>
  <define name="k.pwd.attribute">
    <attribute name="pwd">
      <a:documentation>The password</a:documentation>
    </attribute>
  </define>
  <define name="k.script.attribute">
    <attribute name="script">
      <a:documentation>A script hook for meta files to be called after the
file was fetched</a:documentation>
    </attribute>
  </define>
  <define name="k.source.attribute">
    <attribute name="source">
      <a:documentation>A location where packages can be found to build an
installation source from</a:documentation>
    </attribute>
  </define>
  <define name="k.size.attribute">
    <attribute name="size">
      <a:documentation>A partition size or optional image size</a:documentation>
    </attribute>
  </define>
  <define name="k.dest.attribute">
    <attribute name="dest">
      <a:documentation>Destination of a ressource</a:documentation>
    </attribute>
  </define>
  <define name="k.username.attribute">
    <attribute name="username">
      <a:documentation>A name of a user</a:documentation>
    </attribute>
  </define>
  <!--
    ==========================================
    common element <author>
    
  -->
  <div>
    <define name="k.author.attlist">
      <empty/>
    </define>
    <define name="k.author">
      <element name="author">
        <a:documentation>Author of the image</a:documentation>
        <ref name="k.author.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <compressed>
    
  -->
  <div>
    <define name="k.compressed.attlist">
      <empty/>
    </define>
    <define name="k.compressed">
      <!--
        [
        db:para [
        	"The compression may be changed by the" ~
        	"code according to the image output type"
        ]
        ]
      -->
      <element name="compressed">
        <a:documentation>Compress image. </a:documentation>
        <ref name="k.compressed.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <configuration>
    
  -->
  <div>
    <define name="k.configuration.source.attribute">
      <ref name="k.source.attribute"/>
    </define>
    <define name="k.configuration.dest.attribute">
      <ref name="k.dest.attribute"/>
    </define>
    <define name="k.configuration.attlist">
      <interleave>
        <ref name="k.configuration.source.attribute"/>
        <ref name="k.configuration.dest.attribute"/>
      </interleave>
    </define>
    <define name="k.configuration">
      <element name="configuration">
        <a:documentation>Specifies Configuration files</a:documentation>
        <db:para>As part of the network deploy configuration this section
specifies the configuration files which should be included
into the image after deployment.</db:para>
        <ref name="k.configuration.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <commandline>
    
  -->
  <div>
    <define name="k.commandline.attlist">
      <empty/>
    </define>
    <define name="k.commandline">
      <element name="commandline">
        <a:documentation>Specifies the Kernel Boot Commandline</a:documentation>
        <db:para>As part of the network deploy configuration this section
specifies the kernel boot commandline used when the image
gets deployed.</db:para>
        <ref name="k.commandline.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <contact>
    
  -->
  <div>
    <define name="k.contact.attlist">
      <empty/>
    </define>
    <define name="k.contact">
      <element name="contact">
        <a:documentation>Contact Information from the Author, like Email etc.</a:documentation>
        <ref name="k.contact.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultbaseroot>
    
  -->
  <div>
    <define name="k.defaultbaseroot.attlist">
      <empty/>
    </define>
    <define name="k.defaultbaseroot">
      <element name="defaultbaseroot">
        <a:documentation>Default Path if baseroot Option is not Specified</a:documentation>
        <ref name="k.defaultbaseroot.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultdestination>
    
  -->
  <div>
    <define name="k.defaultdestination.attlist">
      <empty/>
    </define>
    <define name="k.defaultdestination">
      <element name="defaultdestination">
        <a:documentation>Default Path if destdir Otion is Not Specified</a:documentation>
        <ref name="k.defaultdestination.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <defaultroot>
    
  -->
  <div>
    <define name="k.defaultroot.attlist">
      <empty/>
    </define>
    <define name="k.defaultroot">
      <element name="defaultroot">
        <a:documentation>Default Root Directory Name if root Option is Not Specified</a:documentation>
        <ref name="k.defaultroot.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <file>
    
  -->
  <div>
    <define name="k.file.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.file.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.file.attlist">
      <interleave>
        <ref name="k.file.name.attribute"/>
        <optional>
          <ref name="k.file.arch.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.file">
      <element name="file">
        <a:documentation>A Pointer to a File</a:documentation>
        <ref name="k.file.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <except>
    
  -->
  <div>
    <define name="k.except.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.except.attlist">
      <ref name="k.except.name.attribute"/>
    </define>
    <define name="k.except">
      <element name="except">
        <a:documentation>A Pointer to a File which should be excluded</a:documentation>
        <ref name="k.except.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <ignore>
    
  -->
  <div>
    <define name="k.ignore.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.ignore.attlist">
      <ref name="k.ignore.name.attribute"/>
    </define>
    <define name="k.ignore">
      <element name="ignore">
        <a:documentation>Ignores a Package</a:documentation>
        <ref name="k.ignore.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <initrd>
    
  -->
  <div>
    <define name="k.initrd.attlist">
      <empty/>
    </define>
    <define name="k.initrd">
      <element name="initrd">
        <a:documentation>Specifies where the Boot Image can be Found</a:documentation>
        <db:para>As part of the network deploy configuration this element
specifies where the boot image (initrd) can be found.</db:para>
        <ref name="k.initrd.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <instrepo>
    
  -->
  <div>
    <define name="k.instrepo.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.instrepo.priority.attribute">
      <attribute name="priority">
        <a:documentation>Search priority for packages in this repo</a:documentation>
      </attribute>
    </define>
    <define name="k.instrepo.username.attribute">
      <ref name="k.username.attribute"/>
    </define>
    <define name="k.instrepo.pwd.attribute">
      <ref name="k.pwd.attribute"/>
    </define>
    <define name="k.instrepo.attlist">
      <interleave>
        <ref name="k.instrepo.name.attribute"/>
        <ref name="k.instrepo.priority.attribute"/>
        <optional>
          <ref name="k.instrepo.username.attribute"/>
        </optional>
        <optional>
          <ref name="k.instrepo.pwd.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.instrepo">
      <element name="instrepo">
        <a:documentation>Name of a Installation Repository</a:documentation>
        <db:para>Name of a repository which is used to create an
installation source</db:para>
        <ref name="k.instrepo.attlist"/>
        <ref name="k.source"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <kernel>
    
  -->
  <div>
    <define name="k.kernel.attlist">
      <empty/>
    </define>
    <define name="k.kernel">
      <element name="kernel">
        <a:documentation>Specifies Where to Find the Boot Kernel</a:documentation>
        <db:para>As part of the network deploy configuration this section
specifies the where to find the boot kernel.</db:para>
        <ref name="k.kernel.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <keytable>
    
  -->
  <div>
    <define name="k.keytable.attlist">
      <empty/>
    </define>
    <define name="k.keytable">
      <element name="keytable">
        <a:documentation>Image keytable setup.</a:documentation>
        <db:para>The value will be part of /etc/sysconfig/keyboard</db:para>
        <ref name="k.keytable.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <locale>
    
  -->
  <div>
    <!-- locale -->
    <define name="k.locale.attlist">
      <empty/>
    </define>
    <define name="k.locale">
      <element name="locale">
        <a:documentation>Image locale setup.</a:documentation>
        <db:para>The value will be part of /etc/sysconfig/keyboard</db:para>
        <ref name="k.locale.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <metadata>
    
  -->
  <div>
    <define name="k.metadata.attlist">
      <empty/>
    </define>
    <define name="k.metadata">
      <element name="metadata">
        <a:documentation>Contains Metadata</a:documentation>
        <db:para>When building an installation source not only packages are
relevant but also metadata. metadata are files or packages
combined with script calls. If a package is specified as
metadata it will not be installed by rpm but its cpio
archive is extracted in a specific way.</db:para>
        <interleave>
          <ref name="k.metadata.attlist"/>
          <oneOrMore>
            <ref name="k.repopackage"/>
          </oneOrMore>
          <zeroOrMore>
            <ref name="k.metafile"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.chroot"/>
          </zeroOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <metafile>
    
  -->
  <div>
    <define name="k.metafile.url.attribute">
      <attribute name="url">
        <a:documentation>URL where to find the metafile</a:documentation>
      </attribute>
    </define>
    <define name="k.metafile.script.attribute">
      <ref name="k.script.attribute"/>
    </define>
    <define name="k.metafile.target.attribute">
      <attribute name="target">
        <a:documentation>Destination path where to download the file</a:documentation>
      </attribute>
    </define>
    <define name="k.metafile.attlist">
      <interleave>
        <ref name="k.metafile.url.attribute"/>
        <ref name="k.metafile.script.attribute"/>
        <ref name="k.metafile.target.attribute"/>
      </interleave>
    </define>
    <define name="k.metafile">
      <element name="metafile">
        <a:documentation>A file Pointer Optionally Bundled With a Script</a:documentation>
        <ref name="k.metafile.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <opensusePattern>
    
  -->
  <div>
    <define name="k.opensusepattern.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.opensusepattern.attlist">
      <ref name="k.opensusepattern.name.attribute"/>
    </define>
    <define name="k.opensusepattern">
      <element name="opensusePattern">
        <a:documentation>Name of a Pattern From openSUSE</a:documentation>
        <ref name="k.opensusepattern.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <repopackage>
    
  -->
  <div>
    <define name="k.repopackage.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.repopackage.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.repopackage.priority.attribute">
      <attribute name="priority">
        <a:documentation>Specifies the search priority</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.addarch.attribute">
      <attribute name="addarch">
        <a:documentation>Specifies that this package should
additionally add the same package from the given arch</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.removearch.attribute">
      <attribute name="removearch">
        <a:documentation>Specifies that the package with the
given arch should be removed</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.forcearch.attribute">
      <attribute name="forcearch">
        <a:documentation>Specifies that the package with
the given arch should be used in any case</a:documentation>
      </attribute>
    </define>
    <define name="k.repopackage.medium.attribute">
      <attribute name="medium">
        <a:documentation>Specifies that the package will be put
to the specific medium number (CD1, DVD7, ...)</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.repopackage.source.attribute">
      <ref name="k.source.attribute"/>
    </define>
    <define name="k.repopackage.script.attribute">
      <ref name="k.script.attribute"/>
    </define>
    <define name="k.repopackage.attlist">
      <interleave>
        <ref name="k.repopackage.name.attribute"/>
        <optional>
          <ref name="k.repopackage.arch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.priority.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.addarch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.removearch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.forcearch.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.source.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.script.attribute"/>
        </optional>
        <optional>
          <ref name="k.repopackage.medium.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.repopackage">
      <element name="repopackage">
        <a:documentation>Name of an instsource Package</a:documentation>
        <ref name="k.repopackage.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <package>
    
  -->
  <div>
    <define name="k.package.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.package.arch.attribute">
      <ref name="k.arch.attribute"/>
    </define>
    <define name="k.package.attlist">
      <interleave>
        <ref name="k.package.name.attribute"/>
        <optional>
          <ref name="k.package.arch.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.package">
      <element name="package">
        <a:documentation>Name of an image Package</a:documentation>
        <ref name="k.package.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <packagemanager>
    
  -->
  <div>
    <define name="k.packagemanager.attlist">
      <empty/>
    </define>
    <define name="k.packagemanager">
      <element name="packagemanager">
        <a:documentation>Name of the Package Manager</a:documentation>
        <db:para>The package manager used for package installation
could be either zypper or smart</db:para>
        <group>
          <ref name="k.packagemanager.attlist"/>
          <text/>
        </group>
        <!-- zypper or smart -->
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <partitions>
    
  -->
  <div>
    <define name="k.partitions.device.attribute">
      <attribute name="device">
        <a:documentation>As part of the network deploy configuration this section
specifies the disk device name</a:documentation>
      </attribute>
    </define>
    <define name="k.partitions.attlist">
      <optional>
        <ref name="k.partitions.device.attribute"/>
      </optional>
    </define>
    <define name="k.partitions">
      <element name="partitions">
        <a:documentation>A List of Partitions</a:documentation>
        <ref name="k.partitions.attlist"/>
        <oneOrMore>
          <ref name="k.partition"/>
        </oneOrMore>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <partition>
    
  -->
  <div>
    <define name="k.partition.type.attribute">
      <attribute name="type">
        <a:documentation>Partition Type identifier, see fdisk for details</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.number.attribute">
      <attribute name="number">
        <a:documentation>Partition ID</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.size.attribute">
      <ref name="k.size.attribute"/>
    </define>
    <define name="k.partition.mountpoint.attribute">
      <attribute name="mountpoint">
        <a:documentation>Mount path for this partition</a:documentation>
      </attribute>
    </define>
    <define name="k.partition.target.attribute">
      <attribute name="target">
        <a:documentation>Is a real target or not which means is part of
the /etc/fstab file or not</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.partition.attlist">
      <interleave>
        <ref name="k.partition.type.attribute"/>
        <ref name="k.partition.number.attribute"/>
        <optional>
          <ref name="k.partition.size.attribute"/>
        </optional>
        <optional>
          <ref name="k.partition.mountpoint.attribute"/>
        </optional>
        <optional>
          <ref name="k.partition.target.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.partition">
      <element name="partition">
        <a:documentation>A Partition</a:documentation>
        <ref name="k.partition.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <persistent>
    
  -->
  <div>
    <define name="k.persistent.attlist">
      <empty/>
    </define>
    <define name="k.persistent">
      <element name="persistent">
        <a:documentation>Specifies Filenames in the Read-Write Disk Area</a:documentation>
        <db:para>As part of the split section the persistent element
specifies filenames which are in the read-write disk area</db:para>
        <interleave>
          <ref name="k.persistent.attlist"/>
          <zeroOrMore>
            <ref name="k.except"/>
          </zeroOrMore>
          <oneOrMore>
            <ref name="k.file"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <profile>
    
  -->
  <div>
    <define name="k.profile.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.profile.description.attribute">
      <attribute name="description">
        <a:documentation>Description of how this profiles influences the image</a:documentation>
      </attribute>
    </define>
    <define name="k.profile.attlist">
      <interleave>
        <ref name="k.profile.name.attribute"/>
        <ref name="k.profile.description.attribute"/>
      </interleave>
    </define>
    <define name="k.profile">
      <element name="profile">
        <a:documentation>Creates Profiles</a:documentation>
        <db:para>Profiles creates a namespace on an image description and
thus can be used to have one description with different
profiles for example KDE and GNOME including different
packages.</db:para>
        <ref name="k.profile.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <repository>
    
  -->
  <div>
    <define name="k.repository.type.attribute">
      <attribute name="type">
        <a:documentation>Type of repository</a:documentation>
        <choice>
          <value>apt-deb</value>
          <value>apt-rpm</value>
          <value>deb-dir</value>
          <value>mirrors</value>
          <value>red-carpet</value>
          <value>rpm-dir</value>
          <value>rpm-md</value>
          <value>slack-site</value>
          <value>up2date-mirrors</value>
          <value>urpmi</value>
          <value>yast2</value>
        </choice>
      </attribute>
    </define>
    <define name="k.repository.status.attribute">
      <attribute name="status">
        <a:documentation>Specifies the status of the repository. This can be
replacable or if not specified it's a must have repository</a:documentation>
        <choice>
          <value>replaceable</value>
          <value>fixed</value>
        </choice>
      </attribute>
    </define>
    <define name="k.repository.attlist">
      <interleave>
        <ref name="k.repository.type.attribute"/>
        <optional>
          <ref name="k.repository.status.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.repository">
      <element name="repository">
        <a:documentation>The Name of the Repository</a:documentation>
        <ref name="k.repository.attlist"/>
        <ref name="k.source"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <rpm-check-signatures>
    
  -->
  <div>
    <define name="k.rpm-check-signatures.attlist">
      <empty/>
    </define>
    <define name="k.rpm-check-signatures">
      <element name="rpm-check-signatures">
        <a:documentation>Setup a Package Signature</a:documentation>
        <db:para>Setup if the package manager should check the package
signature or not. This option could be ignored according
to the used package manager.</db:para>
        <ref name="k.rpm-check-signatures.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <rpm-force>
    
  -->
  <div>
    <define name="k.rpm-force.attlist">
      <empty/>
    </define>
    <define name="k.rpm-force">
      <element name="rpm-force">
        <a:documentation>Force the Installation of a Package</a:documentation>
        <db:para>Setup if the package manager should force the install of the
package or not. This option could be ignored according
to the used package manager.</db:para>
        <ref name="k.rpm-force.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-swapsize>
    
  -->
  <div>
    <define name="k.oem-swapsize.attlist">
      <empty/>
    </define>
    <define name="k.oem-swapsize">
      <element name="oem-swapsize">
        <a:documentation>For oemboot driven images: Set the size of the swap
partition in MB</a:documentation>
        <db:para>For oemboot driven images: Set the size of the swap
partition in MB. No swapspace with oem-swap set to false.</db:para>
        <ref name="k.oem-swapsize.attlist"/>
        <data type="nonNegativeInteger"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-systemsize>
    
  -->
  <div>
    <define name="k.oem-systemsize.attlist">
      <empty/>
    </define>
    <define name="k.oem-systemsize">
      <element name="oem-systemsize">
        <a:documentation>For oemboot driven images: Set the size of the system
(root) partition in MB</a:documentation>
        <db:para>For oemboot driven images: Set the size of the system
(root) partition in MB.</db:para>
        <ref name="k.oem-systemsize.attlist"/>
        <data type="nonNegativeInteger"/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-swap>
    
  -->
  <div>
    <define name="k.oem-swap.attlist">
      <empty/>
    </define>
    <define name="k.oem-swap">
      <element name="oem-swap">
        <a:documentation>For oemboot driven images: use a swap partition yes/no</a:documentation>
        <db:para>For oemboot driven images: use a swap partition yes/no.</db:para>
        <ref name="k.oem-swap.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-home>
    
  -->
  <div>
    <define name="k.oem-home.attlist">
      <empty/>
    </define>
    <define name="k.oem-home">
      <element name="oem-home">
        <a:documentation>For oemboot driven images: use a home partition yes/no</a:documentation>
        <db:para>For oemboot driven images: use a home partition yes/no.</db:para>
        <ref name="k.oem-home.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-recovery>
    
  -->
  <div>
    <define name="k.oem-recovery.attlist">
      <empty/>
    </define>
    <define name="k.oem-recovery">
      <element name="oem-recovery">
        <a:documentation>For oemboot driven images: create a recovery archive yes/no</a:documentation>
        <db:para>For oemboot driven images: create a recovery archive yes/no</db:para>
        <ref name="k.oem-recovery.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-boot-title>
    
  -->
  <div>
    <define name="k.oem-boot-title.attlist">
      <empty/>
    </define>
    <define name="k.oem-boot-title">
      <element name="oem-boot-title">
        <a:documentation>For oemboot driven images: setup of the boot menu text
displayed within the square brackets after first reboot
of the OEM image </a:documentation>
        <db:para>For oemboot driven images: setup of the boot menu text
displayed within the square brackets after first reboot
of the OEM image.</db:para>
        <ref name="k.oem-boot-title.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <oem-reboot>
    
  -->
  <div>
    <define name="k.oem-reboot.attlist">
      <empty/>
    </define>
    <define name="k.oem-reboot">
      <element name="oem-reboot">
        <a:documentation>For oemboot driven images: reboot after first deployment yes/no</a:documentation>
        <db:para>For oemboot driven images: reboot after first deployment yes/no.</db:para>
        <ref name="k.oem-reboot.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <size>
    
  -->
  <div>
    <define name="k.size.unit.attribute">
      <attribute name="unit">
        <a:documentation>The unit of the image</a:documentation>
        <choice>
          <value>M</value>
          <value>G</value>
        </choice>
      </attribute>
    </define>
    <define name="k.size.additive.attribute">
      <attribute name="additive">
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.size.attlist">
      <interleave>
        <optional>
          <ref name="k.size.unit.attribute"/>
        </optional>
        <optional>
          <ref name="k.size.additive.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.size">
      <element name="size">
        <a:documentation>Specifies the Size of an Image in (M)egabyte or (G)igabyte
If the attribute additive is set the value will be added
to the required size of the image</a:documentation>
        <ref name="k.size.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <source>
    
  -->
  <div>
    <define name="k.source.path.attribute">
      <ref name="k.path.attribute"/>
    </define>
    <define name="k.source.attlist">
      <ref name="k.source.path.attribute"/>
    </define>
    <define name="k.source">
      <element name="source">
        <a:documentation>A Pointer to a Repository/Package Source</a:documentation>
        <ref name="k.source.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <specification>
    
  -->
  <div>
    <define name="k.specification.attlist">
      <empty/>
    </define>
    <define name="k.specification">
      <element name="specification">
        <a:documentation>A Detailed Description</a:documentation>
        <db:para>A detailed description of this image and what it can be
used for.</db:para>
        <ref name="k.specification.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <temporary>
    
  -->
  <div>
    <define name="k.temporary.attlist">
      <empty/>
    </define>
    <define name="k.temporary">
      <element name="temporary">
        <a:documentation>Specifies Files in RAM</a:documentation>
        <db:para>As part of the split section the temporary element
specifies file names which are in the RAM disk area.</db:para>
        <interleave>
          <ref name="k.temporary.attlist"/>
          <zeroOrMore>
            <ref name="k.except"/>
          </zeroOrMore>
          <oneOrMore>
            <ref name="k.file"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <timeout>
    
  -->
  <div>
    <define name="k.timeout.attlist">
      <empty/>
    </define>
    <define name="k.timeout">
      <element name="timeout">
        <a:documentation>Specifies an ATFTP Download Timeout</a:documentation>
        <db:para>As part of the network deploy configuration this section 
specifies an ATFTP download timeout</db:para>
        <ref name="k.timeout.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <timezone>
    
  -->
  <div>
    <define name="k.timezone.attlist">
      <empty/>
    </define>
    <define name="k.timezone">
      <element name="timezone">
        <a:documentation>Setup Image Timezone setup</a:documentation>
        <db:para>Image timezone setup. The value will be used to search
the correct timezone and copy it to /etc/localtime.</db:para>
        <ref name="k.timezone.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <type>
    
  -->
  <div>
    <define name="k.type.baseroot.attribute">
      <attribute name="baseroot">
        <a:documentation>Specify the path to a pre created base root system.</a:documentation>
      </attribute>
    </define>
    <define name="k.type.bootprofile.attribute">
      <attribute name="bootprofile">
        <a:documentation>Specifies the boot profile if defined in the boot image
description. Used when KIWI option add-profile is used</a:documentation>
      </attribute>
    </define>
    <define name="k.type.boot.attribute">
      <attribute name="boot">
        <a:documentation>Specifies the path of the boot image (initrd), relative
to /usr/share/kiwi/image</a:documentation>
      </attribute>
    </define>
    <define name="k.type.checkprebuilt.attribute">
      <attribute name="checkprebuilt">
        <a:documentation>Activates whether KIWI should search for a prebuild boot
image or not</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.type.flags.attribute">
      <attribute name="flags">
        <a:documentation>Specifies flags for the image type. This could be compressed
or unified and applies to the iso type only</a:documentation>
        <choice>
          <value>unified</value>
          <value>compressed</value>
          <value>unified-cromfs</value>
          <value>compressed-cromfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.filesystem.attribute">
      <attribute name="filesystem">
        <a:documentation>Specifies the filesystem which can be one of:
ext2 , ext3 , reiserfs ,squashfs or cromfs</a:documentation>
        <choice>
          <value>ext2</value>
          <value>ext3</value>
          <value>reiserfs</value>
          <value>squashfs</value>
          <value>cromfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.fsreadonly.attribute">
      <attribute name="fsreadonly">
        <a:documentation>Specifies the filesystem for the read-only part of a split image</a:documentation>
        <choice>
          <value>ext2</value>
          <value>ext3</value>
          <value>reiserfs</value>
          <value>squashfs</value>
          <value>cromfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.fsreadwrite.attribute">
      <attribute name="fsreadwrite">
        <a:documentation>Specifies the filesystem for the read-write part of a split image</a:documentation>
        <choice>
          <value>ext2</value>
          <value>ext3</value>
          <value>reiserfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.ec2privatekeyfile.attribute">
      <attribute name="ec2privatekeyfile">
        <a:documentation>AWS user's PEM encoded RSA private key file</a:documentation>
      </attribute>
    </define>
    <define name="k.type.ec2certfile.attribute">
      <attribute name="ec2certfile">
        <a:documentation>AWS user's PEM encoded RSA pubkey certificate file</a:documentation>
      </attribute>
    </define>
    <define name="k.type.ec2accountnr.attribute">
      <attribute name="ec2accountnr">
        <a:documentation>The user's EC2 user ID (Note: AWS account number, NOT Access Key ID)</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.type.format.attribute">
      <attribute name="format">
        <a:documentation>Specifies the format of the virtual disk. This applies to the
vmx/oem types only.</a:documentation>
        <choice>
          <value>vvfat</value>
          <value>vpc</value>
          <value>bochs</value>
          <value>dmg</value>
          <value>cloop</value>
          <value>vmdk</value>
          <value>qcow</value>
          <value>cow</value>
          <value>iso</value>
          <value>usb</value>
          <value>ovf</value>
        </choice>
      </attribute>
    </define>
    <define name="k.type.primary.attribute">
      <attribute name="primary">
        <a:documentation>Specifies the primary type (choose KIWI option type)</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.type.attlist">
      <interleave>
        <optional>
          <ref name="k.type.checkprebuilt.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.bootprofile.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.boot.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.flags.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.filesystem.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.fsreadonly.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.fsreadwrite.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.ec2privatekeyfile.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.ec2certfile.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.ec2accountnr.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.baseroot.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.format.attribute"/>
        </optional>
        <optional>
          <ref name="k.type.primary.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.type">
      <element name="type">
        <a:documentation>The Image Type of the Logical Extend</a:documentation>
        <ref name="k.type.attlist"/>
        <text/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <union>
    
  -->
  <div>
    <define name="k.union.ro.attribute">
      <attribute name="ro">
        <a:documentation>Device only for read-only </a:documentation>
      </attribute>
    </define>
    <define name="k.union.rw.attribute">
      <attribute name="rw">
        <a:documentation>Device for Read-Write</a:documentation>
      </attribute>
    </define>
    <define name="k.union.type.attribute">
      <attribute name="type">
        <choice>
          <value>aufs</value>
          <value>unionfs</value>
        </choice>
      </attribute>
    </define>
    <define name="k.union.attlist">
      <interleave>
        <ref name="k.union.ro.attribute"/>
        <ref name="k.union.rw.attribute"/>
        <ref name="k.union.type.attribute"/>
      </interleave>
    </define>
    <define name="k.union">
      <element name="union">
        <a:documentation>Specifies the Overlay Filesystem</a:documentation>
        <db:para>As part of the network deploy configuration this section
specifies the overlay filesystem setup if required by the
filesystem type of the system image.An overlay setup is only
required if the system image uses a squashfs or cromfs
compressed filesystem.</db:para>
        <ref name="k.union.attlist"/>
        <empty/>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <user>
    
  -->
  <div>
    <define name="k.user.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.user.id.attribute">
      <attribute name="id">
        <a:documentation>The user ID for this user</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.user.realname.attribute">
      <attribute name="realname">
        <a:documentation>The name of an user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.pwd.attribute">
      <ref name="k.pwd.attribute"/>
    </define>
    <define name="k.user.home.attribute">
      <attribute name="home">
        <a:documentation>The home directory for this user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.shell.attribute">
      <attribute name="shell">
        <a:documentation>The shell for this user</a:documentation>
      </attribute>
    </define>
    <define name="k.user.attlist">
      <interleave>
        <ref name="k.user.name.attribute"/>
        <optional>
          <ref name="k.user.id.attribute"/>
        </optional>
        <optional>
          <ref name="k.user.realname.attribute"/>
        </optional>
        <ref name="k.user.pwd.attribute"/>
        <ref name="k.user.home.attribute"/>
        <optional>
          <ref name="k.user.shell.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.user">
      <element name="user">
        <a:documentation>A User with Name, Password, Path to Its Home And Shell</a:documentation>
        <interleave>
          <ref name="k.user.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <version>
    
  -->
  <div>
    <define name="k.version.attlist">
      <empty/>
    </define>
    <define name="k.version">
      <element name="version">
        <a:documentation>A Version Number for the Image, Consists of Major.Minor.Release </a:documentation>
        <interleave>
          <ref name="k.version.attlist"/>
          <text/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <vmwarenic>
    
  -->
  <div>
    <define name="k.vmwarenic.driver.attribute">
      <attribute name="driver">
        <a:documentation>The driver used for the VM network interface</a:documentation>
      </attribute>
    </define>
    <define name="k.vmwarenic.interface.attribute">
      <attribute name="interface">
        <a:documentation>The interface ID for the VM network interface</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.vmwarenic.mode.attribute">
      <attribute name="mode">
        <a:documentation>The VM network mode</a:documentation>
      </attribute>
    </define>
    <define name="k.vmwarenic.attlist">
      <interleave>
        <ref name="k.vmwarenic.driver.attribute"/>
        <ref name="k.vmwarenic.interface.attribute"/>
        <ref name="k.vmwarenic.mode.attribute"/>
      </interleave>
    </define>
    <define name="k.vmwarenic">
      <element name="vmwarenic">
        <a:documentation>The VMware network interface definition</a:documentation>
        <interleave>
          <ref name="k.vmwarenic.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <vmwaredisk>
    
  -->
  <div>
    <define name="k.vmwaredisk.controller.attribute">
      <attribute name="controller">
        <a:documentation>The disk controller used for the VMware guest</a:documentation>
        <choice>
          <value>ide</value>
          <value>scsi</value>
        </choice>
      </attribute>
    </define>
    <define name="k.vmwaredisk.id.attribute">
      <attribute name="id">
        <a:documentation>The disk ID for the VM disk</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.vmwaredisk.attlist">
      <interleave>
        <ref name="k.vmwaredisk.controller.attribute"/>
        <ref name="k.vmwaredisk.id.attribute"/>
      </interleave>
    </define>
    <define name="k.vmwaredisk">
      <element name="vmwaredisk">
        <a:documentation>The VMware disk definition. You can setup either a
scsi disk or an ide disk</a:documentation>
        <interleave>
          <ref name="k.vmwaredisk.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <vmwarecdrom>
    
  -->
  <div>
    <define name="k.vmwarecdrom.controller.attribute">
      <attribute name="controller">
        <a:documentation>The CD/DVD controller used for the VMware guest</a:documentation>
        <choice>
          <value>ide</value>
          <value>scsi</value>
        </choice>
      </attribute>
    </define>
    <define name="k.vmwarecdrom.id.attribute">
      <attribute name="id">
        <a:documentation>The CD/DVD ID for the VM CD rom drive</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.vmwarecdrom.attlist">
      <interleave>
        <ref name="k.vmwarecdrom.controller.attribute"/>
        <ref name="k.vmwarecdrom.id.attribute"/>
      </interleave>
    </define>
    <define name="k.vmwarecdrom">
      <element name="vmwarecdrom">
        <a:documentation>The VMware CD/DVD drive definition. You can setup either a
scsi CD or an ide CD drive</a:documentation>
        <interleave>
          <ref name="k.vmwarecdrom.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    common element <xendisk>
    
  -->
  <div>
    <define name="k.xendisk.device.attribute">
      <attribute name="device">
        <a:documentation>The disk device to appear in the Xen guest</a:documentation>
      </attribute>
    </define>
    <define name="k.xendisk.attlist">
      <ref name="k.xendisk.device.attribute"/>
    </define>
    <define name="k.xendisk">
      <element name="xendisk">
        <a:documentation>The Xen disk device definition.</a:documentation>
        <interleave>
          <ref name="k.xendisk.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <deploy>
    
  -->
  <div>
    <define name="k.deploy.server.attribute">
      <attribute name="server">
        <a:documentation>Name or IP Address of server for downloading the data</a:documentation>
      </attribute>
    </define>
    <define name="k.deploy.blocksize.attribute">
      <attribute name="blocksize">
        <a:documentation>Blocksize value used for atftp downloads</a:documentation>
      </attribute>
    </define>
    <define name="k.deploy.attlist">
      <interleave>
        <optional>
          <ref name="k.deploy.server.attribute"/>
        </optional>
        <optional>
          <ref name="k.deploy.blocksize.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.deploy">
      <element name="deploy">
        <a:documentation>Controls the Image Deploy Process</a:documentation>
        <db:para>The deploy section is used to allow kiwi to create the
config.&lt;MAC&gt; file required by PXE based network images.
the contents of this file controls the image deploy process.</db:para>
        <interleave>
          <ref name="k.deploy.attlist"/>
          <optional>
            <ref name="k.timeout"/>
          </optional>
          <optional>
            <ref name="k.commandline"/>
          </optional>
          <optional>
            <ref name="k.kernel"/>
          </optional>
          <optional>
            <ref name="k.initrd"/>
          </optional>
          <optional>
            <ref name="k.partitions"/>
          </optional>
          <optional>
            <ref name="k.union"/>
          </optional>
          <zeroOrMore>
            <ref name="k.configuration"/>
          </zeroOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <description>
    
  -->
  <div>
    <define name="k.description.type.attribute">
      <attribute name="type">
        <a:documentation>Kiwi distinguishes between two basic image description types
which uses the same format but one is created and provided by
the kiwi developers and the other is created by the users of
kiwi. The type=boot specifies a boot image (initrd) which should
be provided by the kiwi developers wheras type=system specifies
a standard image description created by a kiwi user.</a:documentation>
        <choice>
          <value>boot</value>
          <value>system</value>
        </choice>
      </attribute>
    </define>
    <define name="k.description.attlist">
      <ref name="k.description.type.attribute"/>
    </define>
    <define name="k.description">
      <element name="description">
        <a:documentation>A Short Description</a:documentation>
        <interleave>
          <ref name="k.description.attlist"/>
          <ref name="k.author"/>
          <oneOrMore>
            <ref name="k.contact"/>
          </oneOrMore>
          <ref name="k.specification"/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <drivers>
    
  -->
  <div>
    <define name="k.drivers.type.attribute">
      <attribute name="type">
        <choice>
          <value>drivers</value>
          <value>usbdrivers</value>
          <value>scsidrivers</value>
          <value>netdrivers</value>
        </choice>
      </attribute>
    </define>
    <define name="k.drivers.profiles.attribute">
      <ref name="k.profiles.attribute"/>
    </define>
    <define name="k.drivers.attlist">
      <interleave>
        <ref name="k.drivers.type.attribute"/>
        <optional>
          <ref name="k.drivers.profiles.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.drivers">
      <element name="drivers">
        <a:documentation>A Collection of Driver Files </a:documentation>
        <interleave>
          <ref name="k.drivers.attlist"/>
          <oneOrMore>
            <ref name="k.file"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <instsource>
    
  -->
  <div>
    <define name="k.instsource.attlist">
      <empty/>
    </define>
    <define name="k.instsource">
      <element name="instsource">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The instsource element is used to describe the packages
and the metadata which is required to build an installation
source suitable for Novell SUSE Linux installation media.
From such a source it should be possible to create the
standard SUSE CDs and DVDs as well as use this source as
repository for image building.</db:para>
        <interleave>
          <ref name="k.instsource.attlist"/>
          <ref name="k.architectures"/>
          <ref name="k.productoptions"/>
          <oneOrMore>
            <ref name="k.instrepo"/>
          </oneOrMore>
          <ref name="k.metadata"/>
          <oneOrMore>
            <ref name="k.repopackages"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <architectures>
    
  -->
  <div>
    <define name="k.architectures.attlist">
      <empty/>
    </define>
    <define name="k.architectures">
      <element name="architectures">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The architectures element contains a list of architectures
for which the installation source is designed. At least one
architecture must be defined. Fallback mecahnisms apply.
Each arch element has an optional attribute &lt;fallback&gt;
which is the next in the chain. An omitted value results in
undefined value thus terminating the chain.</db:para>
        <interleave>
          <ref name="k.architectures.attlist"/>
          <oneOrMore>
            <ref name="k.arch"/>
          </oneOrMore>
          <oneOrMore>
            <ref name="k.requiredarch"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <productoptions>
    
  -->
  <div>
    <define name="k.productoptions.attlist">
      <empty/>
    </define>
    <define name="k.productoptions">
      <element name="productoptions">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The productoptions element contains a list of options
that influence the instsource creation process in a
general manner. For instance an option could specify
a default medium number for source packages and the like.</db:para>
        <interleave>
          <ref name="k.productoptions.attlist"/>
          <zeroOrMore>
            <ref name="k.productoption"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.productinfo"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.productvar"/>
          </zeroOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <productoption>
    
  -->
  <div>
    <define name="k.productoption.attlist">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.productoption">
      <element name="productoption">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The productoption element carries the information for a
product option its name and its fallback (productoptional).</db:para>
        <interleave>
          <ref name="k.productoption.attlist"/>
          <text/>
        </interleave>
        <!--
          k.productinfo.text.content	
          xsd:normalizedString { maxLength = "2048" }
        -->
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <arch>
    
  -->
  <div>
    <define name="k.arch.name.attribute">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.arch.id.attribute">
      <ref name="k.id.attribute"/>
    </define>
    <define name="k.arch.fallback.attribute">
      <attribute name="fallback">
        <data type="IDREF"/>
      </attribute>
    </define>
    <define name="k.arch.attlist">
      <interleave>
        <ref name="k.arch.id.attribute"/>
        <ref name="k.arch.name.attribute"/>
        <optional>
          <ref name="k.arch.fallback.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.arch">
      <element name="arch">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The arch element providdes the information for an arch,
its name and its fallback (optional).</db:para>
        <interleave>
          <ref name="k.arch.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <requiredarch>
    
  -->
  <div>
    <define name="k.requiredarch.ref.attribute">
      <attribute name="ref">
        <data type="IDREF"/>
      </attribute>
    </define>
    <define name="k.requiredarch.attlist">
      <ref name="k.requiredarch.ref.attribute"/>
    </define>
    <define name="k.requiredarch">
      <element name="requiredarch">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The requiredarch element defines which  architectures
are the basic required ones for the media.</db:para>
        <interleave>
          <ref name="k.requiredarch.attlist"/>
          <empty/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <productinfo>
    
  -->
  <div>
    <define name="k.productinfo.attlist">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.productinfo">
      <element name="productinfo">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The productinfo element contains one particular environment
variable and its value. Shell rules for the names apply.
The value must not exceed a certain length for sanity.
reasons Any funny characters like tabs, line break,
carriage return or combinations are converted to spaces
(one each) which may lead to unexpected contents.</db:para>
        <interleave>
          <ref name="k.productinfo.attlist"/>
          <!-- text: workaround for the above mentioned problem -->
          <text/>
        </interleave>
        <!--
          k.productinfo.text.content	
          xsd:normalizedString { maxLength = "2048" }
        -->
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <productvar>
    
  -->
  <div>
    <define name="k.productvar.attlist">
      <ref name="k.name.attribute"/>
    </define>
    <define name="k.productvar">
      <element name="productvar">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The productinfo element contains one particular environment
variable and its value. Shell rules for the names apply.
The value is used to create the content file.</db:para>
        <interleave>
          <ref name="k.productvar.attlist"/>
          <!-- text: workaround for the above mentioned problem -->
          <text/>
        </interleave>
        <!--
          k.productvar	
          xsd:normalizedString { maxLength = "2048" }
        -->
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <chroot>
    
  -->
  <div>
    <define name="k.chroot.attlist">
      <attribute name="requires"/>
    </define>
    <define name="k.chroot">
      <element name="chroot">
        <a:documentation>Describe Packages and Metadata</a:documentation>
        <db:para>The chroot element contains one particular environment
variable and its value. Shell rules for the names apply.
The value must not exceed a certain length for sanity.
reasons Any funny characters like tabs, line break, 
carriage return or combinations are converted to spaces
(one each) which may lead to unexpected contents.</db:para>
        <interleave>
          <ref name="k.chroot.attlist"/>
          <text/>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <repopackages>
    
  -->
  <div>
    <define name="k.repopackages.attlist">
      <empty/>
    </define>
    <define name="k.repopackages">
      <element name="repopackages">
        <a:documentation>Specifies Packages for Installation Source</a:documentation>
        <db:para>The repopackages elements specifies a set of packages which
are used for creating a Novell SUSE installation source.</db:para>
        <interleave>
          <ref name="k.repopackages.attlist"/>
          <zeroOrMore>
            <ref name="k.repopackage"/>
          </zeroOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <vmwareconfig>
    
  -->
  <div>
    <define name="k.vmwareconfig.arch.attribute">
      <attribute name="arch">
        <a:documentation>the VMware architecture type</a:documentation>
        <choice>
          <value>ix86</value>
          <value>x86_64</value>
          <value>%arch</value>
        </choice>
      </attribute>
    </define>
    <define name="k.vmwareconfig.HWversion.attribute">
      <attribute name="HWversion">
        <a:documentation>The virtual HW version number for the VMware configuration</a:documentation>
        <data type="integer"/>
      </attribute>
    </define>
    <define name="k.vmwareconfig.guestOS.attribute">
      <attribute name="guestOS">
        <a:documentation>the virtual guestOS identification string for VMware</a:documentation>
      </attribute>
    </define>
    <define name="k.vmwareconfig.memory.attribute">
      <attribute name="memory">
        <a:documentation>The memory setup for the guest VM.</a:documentation>
      </attribute>
    </define>
    <define name="k.vmwareconfig.usb.attribute">
      <attribute name="usb">
        <a:documentation>Activate/Deactivate usb controller for VMware</a:documentation>
        <data type="boolean"/>
      </attribute>
    </define>
    <define name="k.vmwareconfig.attlist">
      <interleave>
        <optional>
          <ref name="k.vmwareconfig.arch.attribute"/>
        </optional>
        <optional>
          <ref name="k.vmwareconfig.HWversion.attribute"/>
        </optional>
        <optional>
          <ref name="k.vmwareconfig.guestOS.attribute"/>
        </optional>
        <optional>
          <ref name="k.vmwareconfig.usb.attribute"/>
        </optional>
        <ref name="k.vmwareconfig.memory.attribute"/>
      </interleave>
    </define>
    <define name="k.vmwareconfig">
      <element name="vmwareconfig">
        <a:documentation>specifies the VMware configuration sections</a:documentation>
        <db:para>The vmwareconfig element specifies the VMware guest
configuration options which are used by the VMware
virtual machine when running the image.</db:para>
        <interleave>
          <ref name="k.vmwareconfig.attlist"/>
          <optional>
            <ref name="k.vmwarenic"/>
          </optional>
          <optional>
            <ref name="k.vmwaredisk"/>
          </optional>
          <optional>
            <ref name="k.vmwarecdrom"/>
          </optional>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <xenconfig>
    
  -->
  <div>
    <define name="k.xenconfig.memory.attribute">
      <attribute name="memory">
        <a:documentation>The memory setup for the Xen guest.</a:documentation>
      </attribute>
    </define>
    <define name="k.xenconfig.attlist">
      <optional>
        <ref name="k.xenconfig.memory.attribute"/>
      </optional>
    </define>
    <define name="k.xenconfig">
      <element name="xenconfig">
        <a:documentation>specifies the Xen configuration sections</a:documentation>
        <db:para>The xenconfig element specifies the Xen guest
configuration options which are used by the Xen
para virtual machine when running the image.</db:para>
        <interleave>
          <ref name="k.xenconfig.attlist"/>
          <optional>
            <ref name="k.xendisk"/>
          </optional>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <packages>
    
  -->
  <div>
    <define name="k.packages.type.attribute">
      <attribute name="type">
        <choice>
          <value>image</value>
          <value>bootstrap</value>
          <value>delete</value>
          <value>testsuite</value>
          <value>xen</value>
          <value>vmware</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.profiles.attribute">
      <attribute name="profiles">
        <a:documentation>Namespace this section applies to. If not specified it
applies to all namespaces</a:documentation>
      </attribute>
    </define>
    <define name="k.packages.patternType.attribute">
      <attribute name="patternType">
        <a:documentation>Selection type for patterns. Could be onlyRequired
plusSuggested or plusRecommended</a:documentation>
        <choice>
          <value>onlyRequired</value>
          <value>plusSuggested</value>
          <value>plusRecommended</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.patternPackageType.attribute">
      <attribute name="patternPackageType">
        <a:documentation>Selection type for packages in patterns. Could be
onlyRequired, plusSuggested or plusRecommended</a:documentation>
        <choice>
          <value>onlyRequired</value>
          <value>plusSuggested</value>
          <value>plusRecommended</value>
        </choice>
      </attribute>
    </define>
    <define name="k.packages.attlist">
      <interleave>
        <ref name="k.packages.type.attribute"/>
        <optional>
          <ref name="k.packages.profiles.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.patternType.attribute"/>
        </optional>
        <optional>
          <ref name="k.packages.patternPackageType.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.packages">
      <element name="packages">
        <a:documentation>Specifies Packages/Patterns Used in Different Stages</a:documentation>
        <db:para>The packages elements specifies a set of packages
and/or patterns which are used in different stages of the
image building process
and also depends of the selected image output type.</db:para>
        <interleave>
          <ref name="k.packages.attlist"/>
          <zeroOrMore>
            <ref name="k.package"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.opensusepattern"/>
          </zeroOrMore>
          <zeroOrMore>
            <ref name="k.ignore"/>
          </zeroOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <preferences>
    
  -->
  <div>
    <define name="k.preferences.attlist">
      <empty/>
    </define>
    <define name="k.preferences">
      <element name="preferences">
        <a:documentation>Configuration Information Needed for Logical Extend</a:documentation>
        <interleave>
          <ref name="k.preferences.attlist"/>
          <oneOrMore>
            <ref name="k.type"/>
          </oneOrMore>
          <ref name="k.version"/>
          <optional>
            <ref name="k.size"/>
          </optional>
          <optional>
            <ref name="k.compressed"/>
          </optional>
          <optional>
            <ref name="k.oem-swap"/>
          </optional>
          <optional>
            <ref name="k.oem-home"/>
          </optional>
          <optional>
            <ref name="k.oem-boot-title"/>
          </optional>
          <optional>
            <ref name="k.oem-swapsize"/>
          </optional>
          <optional>
            <ref name="k.oem-systemsize"/>
          </optional>
          <optional>
            <ref name="k.oem-recovery"/>
          </optional>
          <optional>
            <ref name="k.packagemanager"/>
          </optional>
          <optional>
            <ref name="k.rpm-check-signatures"/>
          </optional>
          <optional>
            <ref name="k.rpm-force"/>
          </optional>
          <optional>
            <ref name="k.keytable"/>
          </optional>
          <optional>
            <ref name="k.timezone"/>
          </optional>
          <optional>
            <ref name="k.locale"/>
          </optional>
          <optional>
            <ref name="k.defaultdestination"/>
          </optional>
          <optional>
            <ref name="k.defaultroot"/>
          </optional>
          <optional>
            <ref name="k.defaultbaseroot"/>
          </optional>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <profiles>
    
  -->
  <div>
    <define name="k.profiles.attlist">
      <empty/>
    </define>
    <define name="k.profiles">
      <element name="profiles">
        <a:documentation>Creates Namespace Section for Drivers</a:documentation>
        <db:para>Namespace section which creates a namespace and the
drivers can bind itself to one of the listed namespaces.</db:para>
        <interleave>
          <ref name="k.profiles.attlist"/>
          <oneOrMore>
            <ref name="k.profile"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <split>
    
  -->
  <div>
    <define name="k.split.attlist">
      <empty/>
    </define>
    <define name="k.split">
      <element name="split">
        <a:documentation>Describes Images in Read-Only and Read-Write Portions</a:documentation>
        <db:para>When the image type split is requested the image will be
splitted into a read-only and a read-write image portion.
Each portion can have different filesystems and the split
section describes which files/directories should go in
what portion.</db:para>
        <interleave>
          <ref name="k.split.attlist"/>
          <optional>
            <ref name="k.temporary"/>
          </optional>
          <optional>
            <ref name="k.persistent"/>
          </optional>
        </interleave>
      </element>
    </define>
  </div>
  <!--
    ==========================================
    main block: <users>
    
  -->
  <div>
    <define name="k.users.group.attribute">
      <attribute name="group">
        <a:documentation>Contains the group to which the user belongs</a:documentation>
      </attribute>
    </define>
    <define name="k.users.id.attribute">
      <attribute name="id">
        <a:documentation>Contains the group ID to which the user belongs</a:documentation>
        <data type="nonNegativeInteger"/>
      </attribute>
    </define>
    <define name="k.users.attlist">
      <interleave>
        <ref name="k.users.group.attribute"/>
        <optional>
          <ref name="k.users.id.attribute"/>
        </optional>
      </interleave>
    </define>
    <define name="k.users">
      <element name="users">
        <a:documentation>A List of Users</a:documentation>
        <interleave>
          <ref name="k.users.attlist"/>
          <oneOrMore>
            <ref name="k.user"/>
          </oneOrMore>
        </interleave>
      </element>
    </define>
  </div>
</grammar>
