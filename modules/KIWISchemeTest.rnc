#================
# FILE          : KIWISchemeTest.rnc
#****************
# PROJECT       : OpenSUSE Build-Service
# COPYRIGHT     : (c) 2006 SUSE LINUX Products GmbH, Germany
#               :
# AUTHOR        : Thomas Schraitle <toms@suse.de>
#               :
# BELONGS TO    : Operating System images
#               :
# DESCRIPTION   : This is the RELAX NG Schema for KIWI
#               : test files. The schema is maintained
#               : in the relax compact syntax. Any changes should
#               : made in !! *** KIWISchemeTest.rnc *** !!
#               : 
#               :
# STATUS        : Development
#****************
namespace xsi = "http://www.w3.org/2001/XMLSchema-instance"

#==========================================
# Start with test_case
start = t.test_case

#==========================================
#
# Common Patterns
#
div {
	# Although they are identical, I used different names so they
	# can be used in elements or in attributes independently.
	t.string.type = text
	t.string-attrib.type = text
}

#==========================================
#
# Element test_case
#
div {
	t.xsi.attribs =
		## Any attributes from the xsi namespace
		## Useful for xsi:noNamespaceSchemaLocation, for example
		attribute xsi:* { text }
	t.test_case.name.attrib =
		## The name of the testcases ???
		attribute name { t.string-attrib.type }
	t.test_case.description.attrib =
		## A short description ???
		attribute description { t.string-attrib.type }
	t.test_case.summary.attrib =
		## A short summary ???
		attribute summary { t.string-attrib.type }
	t.test_case.attlist =
		t.xsi.attribs* &
		t.test_case.name.attrib &
		t.test_case.description.attrib &
		t.test_case.summary.attrib
    
	t.test_case =
		## This schema specifies the format of the tests for kiwi  images.
		element test_case {
			t.test_case.attlist,
			t.requirements,
			t.test*
		}
}

#==========================================
#
# Element requirements
#
div {
	t.requirements.attlist = empty
	t.requirements =
		## A list of requirements
		element requirements {
			t.requirements.attlist,
			t.req+
		}
}

#==========================================
#
# Element req
#
div {
	t.req.type.attrib =
		## ???
		attribute type { t.string-attrib.type }
	t.req.place.attrib =
		## ???
		attribute place { t.string-attrib.type }
	t.req.attlist = 
		t.req.type.attrib &
		t.req.place.attrib ?

	t.req =
		## A single requirement
		element req {
			t.req.attlist,
			t.string.type
		}
}

#==========================================
#
# Element test
#
div {
	t.test.place.attrib =
		## ???
		attribute place { t.string-attrib.type }
    
	t.test.type.attrib =
		## ???
		attribute type { t.string-attrib.type }

	t.test.attlist =
		t.test.type.attrib &
		t.test.place.attrib

	t.test =
		## A single test
		element test {
			t.test.attlist,
			t.file,
			t.path?,
			t.params*
		}
}

#==========================================
#
# Element path
#
div {
	t.file.attlist = empty
  
	t.file =
		## A filename
		element file {
			t.file.attlist,
			t.string.type
		}
}

#==========================================
#
# Element test
#
div {
	t.path.attlist = empty
  
	t.path =
		## A path
		element path {
			t.path.attlist,
			t.string.type
		}
}

#==========================================
#
# Element params
#
div {
	t.params.attlist = empty
  
	t.params =
		## ???
		element params {
			t.params.attlist,
			t.string.type
		}
}

#==========================================
#
# Element type
#
div {
	t.type.attlist = empty
  
	t.type =
		## ???
		element type {
			t.type.attlist,
			t.string.type
		}
}
