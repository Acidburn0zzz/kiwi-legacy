.\"     Title: kiwi
.\"    Author: Marcus Schäfer <ms (AT) suse.de>
.\" Generator: DocBook XSL Stylesheets v1.73.2 <http://docbook.sf.net/>
.\"      Date: Created: 04/08/2008
.\"    Manual: KIWI Manualpage
.\"    Source: KIWI v2.10, r938
.\"
.TH "KIWI" "1" "Created: 04/08/2008" "KIWI v2\.10, r938" "KIWI Manualpage"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
KIWI::config.sh - Configuration File for KIWI image description
.SH "DESCRIPTION"
.PP
The kiwi image description allows to have an optional config\.sh script in place\. This script should be designed to take over control of adding the image operating system configuration\. Configuration in that sense means stuff like activating services, creating configuration files, prepare an environment for a firstboot workflow, etc\. What you shouldn\'t do in config\.sh is breaking your systems integrity by for example removing packages or pieces of software\. Something like that can be done in images\.sh\. config\.sh is called
\fIafter\fR
the user and groups have been set up\. If there are SUSE Linux related YaST xml information these are validated before config\.sh is called too\. If you exit config\.sh with an exit code != 0 kiwi will exit with an error too\.
.PP
\fBExample\ 1.\ Template\fR
.sp
.RS 4
.nf
#======================================
# Functions\.\.\.
#\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
test \-f /\.kconfig && \. /\.kconfig
test \-f /\.profile && \. /\.profile

#======================================
# Greeting\.\.\.
#\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
echo "Configure image: [$name]\.\.\."

#======================================
# Call configuration code/functions
#\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\.\.\.

#======================================
# Exit safely
#\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
exit
.fi
.RE
.SH "COMMON FUNCTIONS"
.PP
The \.kconfig file allows to make use of a common set of functions\. Those which are SUSE Linux specific starts with the name
\fIsuse\fR\. Those which are common to all linux systems starts with the name
\fIbase\fR\. The following list describes which functions are available for config\.sh
.PP
[baseCleanMount]
.RS 4
Umount the system filesystems /proc /dev/pts /sys
.RE
.PP
[baseSetupUserPermissions]
.RS 4
Search all home directories of all users listed in /etc/passwd and change the ownership of all files to belong to the correct user and group
.RE
.PP
[baseGetProfilesUsed]
.RS 4
Return the name(s) of profiles used to build this image
.RE
.PP
[baseSetupInPlaceSVNRepository]
.RS 4
Create an in place subversion repository for the specified directories\. A standard call could look like this baseSetupInPlaceSVNRepository /etc /srv /var/log
.RE
.PP
[baseSetupInPlaceGITRepository]
.RS 4
Create an in place git repository of the root directory\. This process may take some time and you may expect problems with binary data handling
.RE
.PP
[suseInsertService]
.RS 4
Recursively insert a service\. If there is a service required for this service it will be inserted first\. The suse insserv program is used here
.RE
.PP
[suseRemoveService]
.RS 4
Remove a service and its dependant services using the suse insserv program
.RE
.PP
[suseActivateServices]
.RS 4
Check all services in /etc/init\.d/ and activate them by calling suseInsertService
.RE
.PP
[suseActivateDefaultServices]
.RS 4
Call all postin scriptlets which among other things activates all required default services using suseInsertService
.RE
.PP
[suseService]
.RS 4
Activate/Deactivate a service by using the chkconfig program The function requires the service name and the value on or off as parameters
.RE
.PP
[suseServiceDefaultOn]
.RS 4
Activates the following services to be on by default using the chkconfig program: boot\.rootfsck boot\.cleanup boot\.localfs boot\.localnet boot\.clock policykitd haldaemon network atd syslog cron
.RE
.PP
[suseConfig]
.RS 4
Setup keytable language and timezone if specified in config\.xml and call SuSEconfig afterwards
.RE
.PP
[suseSetupProductInformation]
.RS 4
This function will use zypper to search for the installed product and install all product specific packages\. This function only makes sense if zypper is used as packagemanager
.RE
.SH "PROFILE ENVIRONMENT VARIABLES"
.PP
The \.profile environment file contains a specific set of variables which are listed below\. Some of the functions above makes use of the variables\.
.PP
[$name]
.RS 4
The name of the image as listed in config\.xml
.RE
.PP
[$keytablee]
.RS 4
The contents of the keytable setup as done in config\.xml
.RE
.PP
[$language]
.RS 4
The contents of the locale setup as done in config\.xml
.RE
.PP
[$timezone]
.RS 4
The contents of the timezone setup as done in config\.xml
.RE
.PP
[$delete]
.RS 4
A list of all packages which are part of the packages section with type=\'delete\' in config\.xml
.RE
.PP
[$profiles]
.RS 4
A list of profiles used to build this image
.RE
.PP
[$drivers]
.RS 4
A comma seperated list of the driver entries as listed in the drivers section of the config\.xml\. Similar variables exists for the usbdrivers and scsidrivers sections
.RE
.PP
[$size]
.RS 4
The predefined size value for this image\. This is not the computed size but only the optional size value of the preferences section in config\.xml
.RE
.PP
[$compressed]
.RS 4
The value of the compressed flag of the preferences section in config\.xml
.RE
.PP
[$type]
.RS 4
The basic image type\. Can be a simply filesystem image type of ext2 ext3 reiserfs squashfs cpio or one of the following complex image types: iso split usb vmx oem xen pxe
.RE
.SH "AUTHOR"
.PP
\fBMarcus Schäfer\fR <\&ms (AT) suse\.de\&>
.sp -1n
.IP "" 4
Developer

